openapi: 3.0.0
info:
  version: 1.0.0
  title: Neurotrack API
  description: 'Cognitive testing, you know you need it!'
  license:
    name: Private
servers:
  - description: Development Environment
    url: 'https://api.dev-neurotrack.io'
  - description: QA Environment
    url: 'https://api.qa-neurotrack.io'
  - description: Staging Environment
    url: 'https://api.staging-neurotrack.io'
  - description: Production Environment
    url: 'https://api.jp-neurotrack.io'
tags:
  - name: app
    description: 'App States Service. Provides the current status of the app, defining if it is in maintenance mode or regular use.'
  - name: auth
    description: Authorizers Service
  - name: user
    description: Endpoints related to the Users service
  - name: coaching
    description: 'Endpoints related to Coaching Service - include the user-id in the path as shown, and the request body must be {''status'': VALID_STATUS} as an example'
  - name: external links
    description: Endpoints related to External Links. Currently we just implement myLinkX but the whole codebase supports new providers.
  - name: medical integration
    description: 'This is the Medical Integrations Service. This service is related to integrations with third party ones. The services we are connecting with are: [https://athenahealth.com] (Athena Health)'
  - name: exam config
    description: Exam Configurations Service
  - name: exam serving
    description: 'Endpoints related to Exam Serving Service, from the Assessment creation until the results are available. <br/> All the following micro-services should be included in here:<br/>       * exam-serving-service * exam-data-transformation-service * perception-acceptance-service * automated-scoring-service * result-service'
  - name: results
    description: 'Endpoints related to Result Service. This service will provide the results for assessments, no matter if the assessment was properly scored or not.'
paths:
  /v1/app/statuscheck:
    get:
      summary: Get the current state of the app
      description: Get the current state of the app. It indicates if the app is in maintenance mode and if there any update available (required or optional).
      tags:
        - app
      parameters:
        - in: header
          name: Accept-Language
          description: Language used to translate content.
          schema:
            type: string
            enum:
              - en
              - ja
            default: en
        - in: query
          name: platform
          description: App's OS platform
          schema:
            type: string
            enum:
              - ios
              - android
        - in: query
          name: version
          description: Current version of the app on the user device.
          schema:
            type: string
            example: 2.1.1
        - in: query
          name: identifier
          description: App's identifier
          schema:
            type: string
            enum:
              - com.neurotrack.ios.app
              - com.neurotrack.ios.app.staging
              - com.neurotrack.ios.app.qa
              - com.neurotrack.ios.app.dev
              - com.neurotrack.android.app
              - com.neurotrack.android.app.staging
              - com.neurotrack.android.app.qa
              - com.neurotrack.android.app.dev
      responses:
        '200':
          description: Successfull request showing the current app status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppStatus'
              examples:
                Up to Date:
                  value:
                    status: UP_TO_DATE
                    headline: Up To Date
                    body: Neurotrack app is up to date.
                Update Available:
                  value:
                    status: UPDATE_AVAILABLE
                    headline: Update Available
                    body: An updated version of Neurotrack is available. Please download it for the best experience.
                Update Required:
                  value:
                    status: UPDATE_REQUIRED
                    headline: Update Required
                    body: An updated version of Neurotrack is available. You must download it to continue your experience.
                Maintenance Mode:
                  value:
                    status: MAINTENANCE_MODE
                    headline: Under Maintenance
                    body: 'Sorry, your app is momentarily unavailable as Neurotrack is working on solving some issues. Hold tight and check in back soon.'
        '400':
          description: Bad request. return HTTP 400
          content:
            application/json:
              examples:
                Missing required parameter:
                  value:
                    code: APS-402
                    message: Bad request for getting App State.
                    culprits:
                      - category: INVALID_REQUEST_DATA
                        message: 'The parameter platform, version and build_number must be provided.'
                Invalid Platform:
                  value:
                    code: APS-402
                    message: Bad request for getting App State.
                    culprits:
                      - category: INVALID_REQUEST_DATA
                        message: The parameter platform is missing or invalid.
                Invalid Version:
                  value:
                    code: APS-402
                    message: Bad request for getting App State.
                    culprits:
                      - category: INVALID_REQUEST_DATA
                        message: The parameter version is missing or an invalid SemVer string.
                Invalid Identifier:
                  value:
                    code: APS-402
                    message: Bad request for getting App State.
                    culprits:
                      - category: INVALID_REQUEST_DATA
                        message: The parameter identifier is missing or invalid.
  '/v1/partner-code/{code}':
    get:
      tags:
        - auth
      summary: Check partner code
      description: Validates that a partner code (access code) is valid and available for registrations
      parameters:
        - in: path
          name: code
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                properties:
                  organization:
                    type: string
                    example: mobile-org-2022
                  partner_code:
                    type: string
                    example: MOBILE_2022
                  status:
                    type: string
                    enum:
                      - ACTIVE
                    example: ACTIVE
                  max_usage:
                    type: integer
                    nullable: true
                    example: 1000
                  usage_count:
                    type: integer
                    example: 10
                  created_at:
                    type: string
                    example: '2022-03-18T19:19:36.645Z'
                  deleted_at:
                    type: string
                    nullable: true
                    example: null
                  updated_at:
                    type: string
                    nullable: true
                    example: '2022-03-18T19:19:36.645Z'
                  description:
                    type: string
                    example: Code for creating accounts for Mobile
        '404':
          $ref: '#/components/responses/404'
  /v1/global-auth/login:
    post:
      tags:
        - auth
      summary: Login
      description: Authenticates the user credentials (username and password) and returns the access token and refresh token if the validation is successful.
      servers:
        - description: Development Environment
          url: 'https://dev.auth.neurotrack.io'
        - description: QA Environment
          url: 'https://qa.auth.neurotrack.io'
        - description: Staging Environment
          url: 'https://staging.auth.neurotrack.io'
        - description: Production Environment
          url: 'https://auth.neurotrack.io'
        - description: US Production Environment
          url: 'https://auth.neurotrack.io'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                username:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: '123456'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                required:
                  - access_token
                  - id_token
                  - refresh_token
                  - expires_in
                properties:
                  access_token:
                    type: string
                    description: 'Access token that should be used in the other endpoints. This endpoint is short lived, generally valid for some minutes.'
                  id_token:
                    type: string
                    description: 'Id token that contains information about the user identification such as api_url, organization, is_test_user.'
                  refresh_token:
                    type: string
                    description: 'Refresh token that should be used to get a new access token. This endpoint is long lived, generally valid for some days. It should be stored securely.'
                  expires_in:
                    type: integer
                    description: 'How long, in seconds, the access token is valid.'
                    example: 300
                  token_type:
                    type: string
                    description: Token type to be used as a prefix for the access token in the authenticated requests. It should be always 'bearer'
                    example: bearer
        '403':
          $ref: '#/components/responses/403'
  /v1/global-auth/logout:
    post:
      tags:
        - auth
      summary: Logout
      description: Invalidates the user refresh token. It requires a valid Access token as the input  on the Authorization header.
      servers:
        - description: Development Environment
          url: 'https://dev.auth.neurotrack.io'
        - description: QA Environment
          url: 'https://qa.auth.neurotrack.io'
        - description: Staging Environment
          url: 'https://staging.auth.neurotrack.io'
        - description: Production Environment
          url: 'https://auth.neurotrack.io'
        - description: US Production Environment
          url: 'https://auth.neurotrack.io'
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
  /v1/global-auth/refresh-token:
    post:
      tags:
        - auth
      summary: Refresh token
      description: Generates a new access token for the user when the refresh token provided is valid.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
                  description: Refresh token
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: 'Access token that should be used in the other endpoints. This endpoint is short lived, generally valid for some minutes.'
                  id_token:
                    type: string
                    description: 'Id token that contains information about the user identification such as api_url, organization, is_test_user.'
                  expires_in:
                    type: integer
                    description: 'How long, in seconds, the access token is valid.'
                    example: 300
                  token_type:
                    type: string
                    description: Token type to be used as a prefix for the access token in the authenticated requests. It should be always 'bearer'
                    example: bearer
        '401':
          $ref: '#/components/responses/401'
  /v1/global-auth/forgot-password:
    post:
      tags:
        - auth
      summary: Start password recovery
      description: 'Starts the forgot password workflow. Notice that for security reasons, even if the username is not found in the codebase, it will return a successful message.'
      servers:
        - description: Development Environment
          url: 'https://dev.auth.neurotrack.io'
        - description: QA Environment
          url: 'https://qa.auth.neurotrack.io'
        - description: Staging Environment
          url: 'https://staging.auth.neurotrack.io'
        - description: Production Environment
          url: 'https://auth.neurotrack.io'
        - description: US Production Environment
          url: 'https://auth.neurotrack.io'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: username that will have the password reset process initiated.
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Confirmation message that process was initiated.
                    example: Password reset initiated for user@example.com
        '400':
          description: Bad request. return HTTP 400
          content:
            application/json:
              examples:
                Invalid payload:
                  value:
                    code: AUTH-002
                    message: Data does not adhere to schema.
                    culprits:
                      - category: INVALID_REQUEST_DATA
                        message: 'Missing key: ''username'''
                        field: username
                Invalid username format:
                  value:
                    code: AUTH-002
                    message: Invalid username format.
        '429':
          description: Attempt limit exceeeded. Try again after some time.
          content:
            application/json:
              examples:
                Too Many Requests:
                  value:
                    code: AUTH-003
                    message: 'Attempt limit exceeded, please try after some time.'
  /v1/global-auth/confirm-forgot-password:
    post:
      tags:
        - auth
      summary: Complete password recovery
      description: Completes the forgot passworkd process by storing the new password on the system.
      servers:
        - description: Development Environment
          url: 'https://dev.auth.neurotrack.io'
        - description: QA Environment
          url: 'https://qa.auth.neurotrack.io'
        - description: Staging Environment
          url: 'https://staging.auth.neurotrack.io'
        - description: Production Environment
          url: 'https://auth.neurotrack.io'
        - description: US Production Environment
          url: 'https://auth.neurotrack.io'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: username that will have the password reset process initiated.
                code:
                  type: string
                  description: confirmation code required to finish the reset password process.
                password:
                  type: string
                  description: new password for the user. Should comply to the password policy.
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Confirmation message that process was completed.
                    example: Password successfully set for user@example.com
        '400':
          description: Bad request. return HTTP 400
          content:
            application/json:
              examples:
                Invalid payload:
                  value:
                    code: AUTH-002
                    message: Data does not adhere to schema.
                    culprits:
                      - category: INVALID_REQUEST_DATA
                        message: 'Missing key: ''username'''
                        field: username
                      - category: INVALID_REQUEST_DATA
                        message: 'Missing key: ''code'''
                        field: code
                      - category: INVALID_REQUEST_DATA
                        message: 'Missing key: ''password'''
                        field: password
                Password policy:
                  value:
                    code: AUTH-004
                    message: Password does not conform to policy. Password must have at least 8 characters.
                Invalid username format:
                  value:
                    code: AUTH-005
                    message: 'Provided code is expired, invalid or does not match the user.'
        '403':
          $ref: '#/components/responses/403'
        '429':
          description: Attempt limit exceeeded. Try again after some time.
          content:
            application/json:
              examples:
                Too Many Requests:
                  value:
                    code: AUTH-003
                    message: 'Attempt limit exceeded, please try after some time.'
  /v1/users:
    get:
      tags:
        - user
      summary: Simple user search
      description: 'Find a list of users that matches a given search criteria. If the current user is a customer, the response will be limited to the user record. Only support users and admins are able to retrieve other users profiles.'
      parameters:
        - in: query
          name: pagesize
          description: Maximum number of items to be retrieved in the payload.
          schema:
            type: number
            default: 10
        - in: query
          name: page
          description: Current page of records for pagination.
          schema:
            type: number
            default: 1
        - in: query
          name: fields
          description: 'Comma-separated list of field names to be returned in the payload. If it is not passed in the request, all User fields will be retrieved. The user_id will always be in the response payload since it is the unique identifier for the user record.'
          schema:
            type: string
            example: 'organization,email,date_of_birth,sex'
        - in: query
          name: 'filter[field_name__sufix]'
          description: 'Allow filter the records to be retrieved. We must replace field_name with the proper field_name. And we can use suffix to indicate what is the operation to be used. It can be eq,exists,not_exists,is_in,gt,gte,lt,lte,between,contains. If no suffix is passed, it will consider the eq operation. For methods that expect more than one value, like is_in or between, we should provide a comma_separated list of values.'
          schema:
            type: string
            example: 'male,female'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1v1~1users/post/responses/200/content/application~1json/schema'
        '400':
          description: Bad request. return HTTP 400
          content:
            application/json:
              examples:
                Filter suffix is not valid:
                  value:
                    error: Filter suffix is not valid.
                Invalid number of filter parts:
                  value:
                    error: Filter is composed of an invalid number of parts. It should use double underscores at most once.
                Unexpected filter suffix arguments:
                  value:
                    error: Unexpected number of arguments for the given filter suffix.
        '401':
          $ref: '#/components/responses/401'
    post:
      tags:
        - user
      summary: Create user
      description: Create a user account
      servers:
        - description: Development Environment
          url: 'https://dev.auth.neurotrack.io'
        - description: QA Environment
          url: 'https://qa.auth.neurotrack.io'
        - description: Staging Environment
          url: 'https://staging.auth.neurotrack.io'
        - description: Production Environment
          url: 'https://auth.neurotrack.io'
        - description: US Production Environment
          url: 'https://auth.neurotrack.io'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - family_name
                - given_name
                - email
                - password
                - organization
              properties:
                family_name:
                  type: string
                  example: John
                given_name:
                  type: string
                  example: Smith
                email:
                  type: string
                  description: User email for the account
                  example: user-email@xyz.com
                password:
                  type: string
                  description: Password for the user account
                organization:
                  type: string
                  description: Organization to associate with the user
                timezone:
                  type: string
                  nullable: true
                  enum:
                    - Africa/Abidjan
                    - Africa/Accra
                    - Africa/Addis_Ababa
                    - Africa/Algiers
                    - Africa/Asmara
                    - Africa/Asmera
                    - Africa/Bamako
                    - Africa/Bangui
                    - Africa/Banjul
                    - Africa/Bissau
                    - Africa/Blantyre
                    - Africa/Brazzaville
                    - Africa/Bujumbura
                    - Africa/Cairo
                    - Africa/Casablanca
                    - Africa/Ceuta
                    - Africa/Conakry
                    - Africa/Dakar
                    - Africa/Dar_es_Salaam
                    - Africa/Djibouti
                    - Africa/Douala
                    - Africa/El_Aaiun
                    - Africa/Freetown
                    - Africa/Gaborone
                    - Africa/Harare
                    - Africa/Johannesburg
                    - Africa/Juba
                    - Africa/Kampala
                    - Africa/Khartoum
                    - Africa/Kigali
                    - Africa/Kinshasa
                    - Africa/Lagos
                    - Africa/Libreville
                    - Africa/Lome
                    - Africa/Luanda
                    - Africa/Lubumbashi
                    - Africa/Lusaka
                    - Africa/Malabo
                    - Africa/Maputo
                    - Africa/Maseru
                    - Africa/Mbabane
                    - Africa/Mogadishu
                    - Africa/Monrovia
                    - Africa/Nairobi
                    - Africa/Ndjamena
                    - Africa/Niamey
                    - Africa/Nouakchott
                    - Africa/Ouagadougou
                    - Africa/Porto-Novo
                    - Africa/Sao_Tome
                    - Africa/Timbuktu
                    - Africa/Tripoli
                    - Africa/Tunis
                    - Africa/Windhoek
                    - America/Adak
                    - America/Anchorage
                    - America/Anguilla
                    - America/Antigua
                    - America/Araguaina
                    - America/Argentina/Buenos_Aires
                    - America/Argentina/Catamarca
                    - America/Argentina/ComodRivadavia
                    - America/Argentina/Cordoba
                    - America/Argentina/Jujuy
                    - America/Argentina/La_Rioja
                    - America/Argentina/Mendoza
                    - America/Argentina/Rio_Gallegos
                    - America/Argentina/Salta
                    - America/Argentina/San_Juan
                    - America/Argentina/San_Luis
                    - America/Argentina/Tucuman
                    - America/Argentina/Ushuaia
                    - America/Aruba
                    - America/Asuncion
                    - America/Atikokan
                    - America/Atka
                    - America/Bahia
                    - America/Bahia_Banderas
                    - America/Barbados
                    - America/Belem
                    - America/Belize
                    - America/Blanc-Sablon
                    - America/Boa_Vista
                    - America/Bogota
                    - America/Boise
                    - America/Buenos_Aires
                    - America/Cambridge_Bay
                    - America/Campo_Grande
                    - America/Cancun
                    - America/Caracas
                    - America/Catamarca
                    - America/Cayenne
                    - America/Cayman
                    - America/Chicago
                    - America/Chihuahua
                    - America/Coral_Harbour
                    - America/Cordoba
                    - America/Costa_Rica
                    - America/Creston
                    - America/Cuiaba
                    - America/Curacao
                    - America/Danmarkshavn
                    - America/Dawson
                    - America/Dawson_Creek
                    - America/Denver
                    - America/Detroit
                    - America/Dominica
                    - America/Edmonton
                    - America/Eirunepe
                    - America/El_Salvador
                    - America/Ensenada
                    - America/Fort_Nelson
                    - America/Fort_Wayne
                    - America/Fortaleza
                    - America/Glace_Bay
                    - America/Godthab
                    - America/Goose_Bay
                    - America/Grand_Turk
                    - America/Grenada
                    - America/Guadeloupe
                    - America/Guatemala
                    - America/Guayaquil
                    - America/Guyana
                    - America/Halifax
                    - America/Havana
                    - America/Hermosillo
                    - America/Indiana/Indianapolis
                    - America/Indiana/Knox
                    - America/Indiana/Marengo
                    - America/Indiana/Petersburg
                    - America/Indiana/Tell_City
                    - America/Indiana/Vevay
                    - America/Indiana/Vincennes
                    - America/Indiana/Winamac
                    - America/Indianapolis
                    - America/Inuvik
                    - America/Iqaluit
                    - America/Jamaica
                    - America/Jujuy
                    - America/Juneau
                    - America/Kentucky/Louisville
                    - America/Kentucky/Monticello
                    - America/Knox_IN
                    - America/Kralendijk
                    - America/La_Paz
                    - America/Lima
                    - America/Los_Angeles
                    - America/Louisville
                    - America/Lower_Princes
                    - America/Maceio
                    - America/Managua
                    - America/Manaus
                    - America/Marigot
                    - America/Martinique
                    - America/Matamoros
                    - America/Mazatlan
                    - America/Mendoza
                    - America/Menominee
                    - America/Merida
                    - America/Metlakatla
                    - America/Mexico_City
                    - America/Miquelon
                    - America/Moncton
                    - America/Monterrey
                    - America/Montevideo
                    - America/Montreal
                    - America/Montserrat
                    - America/Nassau
                    - America/New_York
                    - America/Nipigon
                    - America/Nome
                    - America/Noronha
                    - America/North_Dakota/Beulah
                    - America/North_Dakota/Center
                    - America/North_Dakota/New_Salem
                    - America/Nuuk
                    - America/Ojinaga
                    - America/Panama
                    - America/Pangnirtung
                    - America/Paramaribo
                    - America/Phoenix
                    - America/Port-au-Prince
                    - America/Port_of_Spain
                    - America/Porto_Acre
                    - America/Porto_Velho
                    - America/Puerto_Rico
                    - America/Punta_Arenas
                    - America/Rainy_River
                    - America/Rankin_Inlet
                    - America/Recife
                    - America/Regina
                    - America/Resolute
                    - America/Rio_Branco
                    - America/Rosario
                    - America/Santa_Isabel
                    - America/Santarem
                    - America/Santiago
                    - America/Santo_Domingo
                    - America/Sao_Paulo
                    - America/Scoresbysund
                    - America/Shiprock
                    - America/Sitka
                    - America/St_Barthelemy
                    - America/St_Johns
                    - America/St_Kitts
                    - America/St_Lucia
                    - America/St_Thomas
                    - America/St_Vincent
                    - America/Swift_Current
                    - America/Tegucigalpa
                    - America/Thule
                    - America/Thunder_Bay
                    - America/Tijuana
                    - America/Toronto
                    - America/Tortola
                    - America/Vancouver
                    - America/Virgin
                    - America/Whitehorse
                    - America/Winnipeg
                    - America/Yakutat
                    - America/Yellowknife
                    - Antarctica/Casey
                    - Antarctica/Davis
                    - Antarctica/DumontDUrville
                    - Antarctica/Macquarie
                    - Antarctica/Mawson
                    - Antarctica/McMurdo
                    - Antarctica/Palmer
                    - Antarctica/Rothera
                    - Antarctica/South_Pole
                    - Antarctica/Syowa
                    - Antarctica/Troll
                    - Antarctica/Vostok
                    - Arctic/Longyearbyen
                    - Asia/Aden
                    - Asia/Almaty
                    - Asia/Amman
                    - Asia/Anadyr
                    - Asia/Aqtau
                    - Asia/Aqtobe
                    - Asia/Ashgabat
                    - Asia/Ashkhabad
                    - Asia/Atyrau
                    - Asia/Baghdad
                    - Asia/Bahrain
                    - Asia/Baku
                    - Asia/Bangkok
                    - Asia/Barnaul
                    - Asia/Beirut
                    - Asia/Bishkek
                    - Asia/Brunei
                    - Asia/Calcutta
                    - Asia/Chita
                    - Asia/Choibalsan
                    - Asia/Chongqing
                    - Asia/Chungking
                    - Asia/Colombo
                    - Asia/Dacca
                    - Asia/Damascus
                    - Asia/Dhaka
                    - Asia/Dili
                    - Asia/Dubai
                    - Asia/Dushanbe
                    - Asia/Famagusta
                    - Asia/Gaza
                    - Asia/Harbin
                    - Asia/Hebron
                    - Asia/Ho_Chi_Minh
                    - Asia/Hong_Kong
                    - Asia/Hovd
                    - Asia/Irkutsk
                    - Asia/Istanbul
                    - Asia/Jakarta
                    - Asia/Jayapura
                    - Asia/Jerusalem
                    - Asia/Kabul
                    - Asia/Kamchatka
                    - Asia/Karachi
                    - Asia/Kashgar
                    - Asia/Kathmandu
                    - Asia/Katmandu
                    - Asia/Khandyga
                    - Asia/Kolkata
                    - Asia/Krasnoyarsk
                    - Asia/Kuala_Lumpur
                    - Asia/Kuching
                    - Asia/Kuwait
                    - Asia/Macao
                    - Asia/Macau
                    - Asia/Magadan
                    - Asia/Makassar
                    - Asia/Manila
                    - Asia/Muscat
                    - Asia/Nicosia
                    - Asia/Novokuznetsk
                    - Asia/Novosibirsk
                    - Asia/Omsk
                    - Asia/Oral
                    - Asia/Phnom_Penh
                    - Asia/Pontianak
                    - Asia/Pyongyang
                    - Asia/Qatar
                    - Asia/Qostanay
                    - Asia/Qyzylorda
                    - Asia/Rangoon
                    - Asia/Riyadh
                    - Asia/Saigon
                    - Asia/Sakhalin
                    - Asia/Samarkand
                    - Asia/Seoul
                    - Asia/Shanghai
                    - Asia/Singapore
                    - Asia/Srednekolymsk
                    - Asia/Taipei
                    - Asia/Tashkent
                    - Asia/Tbilisi
                    - Asia/Tehran
                    - Asia/Tel_Aviv
                    - Asia/Thimbu
                    - Asia/Thimphu
                    - Asia/Tokyo
                    - Asia/Tomsk
                    - Asia/Ujung_Pandang
                    - Asia/Ulaanbaatar
                    - Asia/Ulan_Bator
                    - Asia/Urumqi
                    - Asia/Ust-Nera
                    - Asia/Vientiane
                    - Asia/Vladivostok
                    - Asia/Yakutsk
                    - Asia/Yangon
                    - Asia/Yekaterinburg
                    - Asia/Yerevan
                    - Atlantic/Azores
                    - Atlantic/Bermuda
                    - Atlantic/Canary
                    - Atlantic/Cape_Verde
                    - Atlantic/Faeroe
                    - Atlantic/Faroe
                    - Atlantic/Jan_Mayen
                    - Atlantic/Madeira
                    - Atlantic/Reykjavik
                    - Atlantic/South_Georgia
                    - Atlantic/St_Helena
                    - Atlantic/Stanley
                    - Australia/ACT
                    - Australia/Adelaide
                    - Australia/Brisbane
                    - Australia/Broken_Hill
                    - Australia/Canberra
                    - Australia/Currie
                    - Australia/Darwin
                    - Australia/Eucla
                    - Australia/Hobart
                    - Australia/LHI
                    - Australia/Lindeman
                    - Australia/Lord_Howe
                    - Australia/Melbourne
                    - Australia/NSW
                    - Australia/North
                    - Australia/Perth
                    - Australia/Queensland
                    - Australia/South
                    - Australia/Sydney
                    - Australia/Tasmania
                    - Australia/Victoria
                    - Australia/West
                    - Australia/Yancowinna
                    - Brazil/Acre
                    - Brazil/DeNoronha
                    - Brazil/East
                    - Brazil/West
                    - CET
                    - CST6CDT
                    - Canada/Atlantic
                    - Canada/Central
                    - Canada/Eastern
                    - Canada/Mountain
                    - Canada/Newfoundland
                    - Canada/Pacific
                    - Canada/Saskatchewan
                    - Canada/Yukon
                    - Chile/Continental
                    - Chile/EasterIsland
                    - Cuba
                    - EET
                    - EST
                    - EST5EDT
                    - Egypt
                    - Eire
                    - Etc/GMT
                    - Etc/GMT+0
                    - Etc/GMT+1
                    - Etc/GMT+10
                    - Etc/GMT+11
                    - Etc/GMT+12
                    - Etc/GMT+2
                    - Etc/GMT+3
                    - Etc/GMT+4
                    - Etc/GMT+5
                    - Etc/GMT+6
                    - Etc/GMT+7
                    - Etc/GMT+8
                    - Etc/GMT+9
                    - Etc/GMT-0
                    - Etc/GMT-1
                    - Etc/GMT-10
                    - Etc/GMT-11
                    - Etc/GMT-12
                    - Etc/GMT-13
                    - Etc/GMT-14
                    - Etc/GMT-2
                    - Etc/GMT-3
                    - Etc/GMT-4
                    - Etc/GMT-5
                    - Etc/GMT-6
                    - Etc/GMT-7
                    - Etc/GMT-8
                    - Etc/GMT-9
                    - Etc/GMT0
                    - Etc/Greenwich
                    - Etc/UCT
                    - Etc/UTC
                    - Etc/Universal
                    - Etc/Zulu
                    - Europe/Amsterdam
                    - Europe/Andorra
                    - Europe/Astrakhan
                    - Europe/Athens
                    - Europe/Belfast
                    - Europe/Belgrade
                    - Europe/Berlin
                    - Europe/Bratislava
                    - Europe/Brussels
                    - Europe/Bucharest
                    - Europe/Budapest
                    - Europe/Busingen
                    - Europe/Chisinau
                    - Europe/Copenhagen
                    - Europe/Dublin
                    - Europe/Gibraltar
                    - Europe/Guernsey
                    - Europe/Helsinki
                    - Europe/Isle_of_Man
                    - Europe/Istanbul
                    - Europe/Jersey
                    - Europe/Kaliningrad
                    - Europe/Kiev
                    - Europe/Kirov
                    - Europe/Lisbon
                    - Europe/Ljubljana
                    - Europe/London
                    - Europe/Luxembourg
                    - Europe/Madrid
                    - Europe/Malta
                    - Europe/Mariehamn
                    - Europe/Minsk
                    - Europe/Monaco
                    - Europe/Moscow
                    - Europe/Nicosia
                    - Europe/Oslo
                    - Europe/Paris
                    - Europe/Podgorica
                    - Europe/Prague
                    - Europe/Riga
                    - Europe/Rome
                    - Europe/Samara
                    - Europe/San_Marino
                    - Europe/Sarajevo
                    - Europe/Saratov
                    - Europe/Simferopol
                    - Europe/Skopje
                    - Europe/Sofia
                    - Europe/Stockholm
                    - Europe/Tallinn
                    - Europe/Tirane
                    - Europe/Tiraspol
                    - Europe/Ulyanovsk
                    - Europe/Uzhgorod
                    - Europe/Vaduz
                    - Europe/Vatican
                    - Europe/Vienna
                    - Europe/Vilnius
                    - Europe/Volgograd
                    - Europe/Warsaw
                    - Europe/Zagreb
                    - Europe/Zaporozhye
                    - Europe/Zurich
                    - GB
                    - GB-Eire
                    - GMT
                    - GMT+0
                    - GMT-0
                    - GMT0
                    - Greenwich
                    - HST
                    - Hongkong
                    - Iceland
                    - Indian/Antananarivo
                    - Indian/Chagos
                    - Indian/Christmas
                    - Indian/Cocos
                    - Indian/Comoro
                    - Indian/Kerguelen
                    - Indian/Mahe
                    - Indian/Maldives
                    - Indian/Mauritius
                    - Indian/Mayotte
                    - Indian/Reunion
                    - Iran
                    - Israel
                    - Jamaica
                    - Japan
                    - Kwajalein
                    - Libya
                    - MET
                    - MST
                    - MST7MDT
                    - Mexico/BajaNorte
                    - Mexico/BajaSur
                    - Mexico/General
                    - NZ
                    - NZ-CHAT
                    - Navajo
                    - PRC
                    - PST8PDT
                    - Pacific/Apia
                    - Pacific/Auckland
                    - Pacific/Bougainville
                    - Pacific/Chatham
                    - Pacific/Chuuk
                    - Pacific/Easter
                    - Pacific/Efate
                    - Pacific/Enderbury
                    - Pacific/Fakaofo
                    - Pacific/Fiji
                    - Pacific/Funafuti
                    - Pacific/Galapagos
                    - Pacific/Gambier
                    - Pacific/Guadalcanal
                    - Pacific/Guam
                    - Pacific/Honolulu
                    - Pacific/Johnston
                    - Pacific/Kiritimati
                    - Pacific/Kosrae
                    - Pacific/Kwajalein
                    - Pacific/Majuro
                    - Pacific/Marquesas
                    - Pacific/Midway
                    - Pacific/Nauru
                    - Pacific/Niue
                    - Pacific/Norfolk
                    - Pacific/Noumea
                    - Pacific/Pago_Pago
                    - Pacific/Palau
                    - Pacific/Pitcairn
                    - Pacific/Pohnpei
                    - Pacific/Ponape
                    - Pacific/Port_Moresby
                    - Pacific/Rarotonga
                    - Pacific/Saipan
                    - Pacific/Samoa
                    - Pacific/Tahiti
                    - Pacific/Tarawa
                    - Pacific/Tongatapu
                    - Pacific/Truk
                    - Pacific/Wake
                    - Pacific/Wallis
                    - Pacific/Yap
                    - Poland
                    - Portugal
                    - ROC
                    - ROK
                    - Singapore
                    - Turkey
                    - UCT
                    - US/Alaska
                    - US/Aleutian
                    - US/Arizona
                    - US/Central
                    - US/East-Indiana
                    - US/Eastern
                    - US/Hawaii
                    - US/Indiana-Starke
                    - US/Michigan
                    - US/Mountain
                    - US/Pacific
                    - US/Samoa
                    - UTC
                    - Universal
                    - W-SU
                    - WET
                    - Zulu
                  example: UTC
                language:
                  type: string
                  description: the list of accepted language codes is huge. We're just defining the most common ones here.
                  enum:
                    - en
                    - ja
                  example: en
                sex:
                  type: string
                  enum:
                    - female
                    - male
                  example: male
                product_tier:
                  type: string
                  enum:
                    - FULL_ACCESS
                    - EXAMS_DISABLED
                  example: FULL_ACCESS
                date_of_birth:
                  type: string
                  nullable: true
                  description: Format YYYY-MM-DD
                  example: 1970-01-01T00:00:00.000Z
                accept_tnc:
                  type: boolean
                  nullable: true
                  description: Defines if the user accepted the Terms and Conditions
                education:
                  type: string
                  nullable: true
                  enum:
                    - 0-6
                    - 7-9
                    - 10-11
                    - HIGHSCHOOL_DEGREE
                    - SOME_COLLEGE
                    - ASSOCIATES_DEGREE
                    - BACHELORS_DEGREE
                    - MASTERS_DEGREE
                    - PROFESSIONAL_DEGREE
                    - DOCTORATE_DEGREE
                  example: BACHELORS_DEGREE
                ethnicity:
                  type: string
                  nullable: true
                  enum:
                    - american_indian
                    - asian
                    - black
                    - hispanic
                    - pacific_islander
                    - white
                  example: white
                journey_settings:
                  type: object
                  properties:
                    lifestyle_domain:
                      type: string
                      nullable: true
                      enum:
                        - cognitive_training
                        - exercise
                        - nutrition
                        - sleep
                        - social_engagement
                        - stress
                      example: sleep
                    cognitive_pathway:
                      type: string
                      enum:
                        - attention
                        - executive_function
                        - memory
                      example: attention
                    coaching_program_start_date:
                      type: string
                      nullable: true
                      description: The date should be in ISO datetime format
                      example: '2021-08-25T00:00:00.000Z'
                    opt_out_of_articles:
                      type: boolean
                      nullable: true
                consents:
                  type: array
                  items:
                    type: object
                    properties:
                      consent:
                        type: string
                        description: Consent type. There is no validation on the type. We accept whatever was sent by the front-end. the current enum contain just some exmples.
                        enum:
                          - share_scores
                          - promo_consent
                        example: share_scores
                      accept_datetime:
                        type: string
                        description: ISO Date when the user accepted the consent
                        example: '2021-08-25T00:00:00.000Z'
                      version:
                        type: string
                        description: Consent version. There is no validation on the version. We accept whatever was sent by the front-end.
                        example: v1.0.0
                      uuid:
                        type: string
                        description: UUID generated to have a unique identifier for the consent.
                        example: 03662e23-085f-4814-a1fb-40e0aa1a61de
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                required:
                  - created_at
                  - email
                  - family_name
                  - given_name
                  - id
                  - organization
                  - resource_type
                  - updated_at
                  - user_id
                properties:
                  resource_type:
                    type: string
                    example: user
                  user_id:
                    type: string
                    description: Unique identifier for an user.
                    example: 7551576a-492f-47d0-8af2-1ce4e6f9a418
                  id:
                    type: string
                    description: For backwards compatibility only. We should use user_id instead.
                    example: 7551576a-492f-47d0-8af2-1ce4e6f9a418
                  organization:
                    type: string
                    description: Organization where the user belongs.
                    example: japan_01
                  sub:
                    type: string
                    description: Unique identifier at the Authentication solution (AWS Cognito)
                    example: 28d8bd3e-ccf9-4757-8d25-a344b9c1538e
                  email:
                    type: string
                    description: User's e-mail
                    example: foo@example.com
                  updated_at:
                    type: string
                    description: ISO Date for last time the user record was updated
                    example: '2021-08-25T00:00:00.000Z'
                  created_at:
                    type: string
                    description: ISO Date for the time the user record was created
                    example: '2021-08-25T00:00:00.000Z'
                  first_login_at:
                    type: string
                    nullable: true
                    description: ISO Date for the first time the user logged in the system
                    example: '2021-08-25T00:00:00.000Z'
                  last_login_at:
                    type: string
                    nullable: true
                    description: ISO Date for the last time the user logged in the system
                    example: '2021-08-25T00:00:00.000Z'
                  picture:
                    type: string
                    description: URL for user's profile picture
                    example: 'https://www.example.com/my_profile_picture.png'
                  given_name:
                    type: string
                    example: John
                  family_name:
                    type: string
                    example: Smith
                  timezone:
                    $ref: '#/paths/~1v1~1users/post/requestBody/content/application~1json/schema/properties/timezone'
                  language:
                    $ref: '#/paths/~1v1~1users/post/requestBody/content/application~1json/schema/properties/language'
                  sex:
                    $ref: '#/paths/~1v1~1users/post/requestBody/content/application~1json/schema/properties/sex'
                  product_tier:
                    $ref: '#/paths/~1v1~1users/post/requestBody/content/application~1json/schema/properties/product_tier'
                  date_of_birth:
                    type: string
                    nullable: true
                    description: Format YYYY-MM-DD
                    example: 1970-01-01T00:00:00.000Z
                  accept_tnc:
                    type: boolean
                    nullable: true
                    description: Defines if the user accepted the Terms and Conditions
                  education:
                    $ref: '#/paths/~1v1~1users/post/requestBody/content/application~1json/schema/properties/education'
                  ethnicity:
                    $ref: '#/paths/~1v1~1users/post/requestBody/content/application~1json/schema/properties/ethnicity'
                  journey_settings:
                    $ref: '#/paths/~1v1~1users/post/requestBody/content/application~1json/schema/properties/journey_settings'
                  coaching:
                    anyOf:
                      - type: object
                        properties:
                          is_coach:
                            type: boolean
                            example: true
                          chat:
                            type: object
                            properties:
                              access_token:
                                type: string
                                example: abcf0dfc9a1814240fb2482acc9fa8faa2c50682
                                description: Access token used to communicate with Sendbird
                              user_id:
                                type: string
                                example: dev_10bb1681_f6bd_4283_a3e0_2bc22b8b9135
                                description: 'User ID on the sendbird platform. It is composed of the stage and the user_id, replacing hyphens with underscores.'
                          status:
                            $ref: '#/paths/~1v1~1coaching~1set-coaching-status~1%7Buser_id%7D/put/requestBody/content/application~1json/schema/properties/status'
                          created_at:
                            type: string
                            example: '2021-08-25T00:00:00.000Z'
                            description: ISO Date when the user became a Coach.
                      - type: object
                        properties:
                          is_coach:
                            type: boolean
                            example: false
                          chat:
                            type: object
                            properties:
                              access_token:
                                type: string
                                example: abcf0dfc9a1814240fb2482acc9fa8faa2c50682
                                description: Access token used to communicate with Sendbird
                              user_id:
                                type: string
                                example: dev_10bb1681_f6bd_4283_a3e0_2bc22b8b9135
                                description: 'User ID on the sendbird platform. It is composed of the stage and the user_id, replacing hyphens with underscores.'
                              channel_url:
                                type: string
                                example: dev_7f1cbdee_c0b5_4e1e_b161_12690811600a
                                description: ID of channel on Sendbird platform where the messages will be sent.
                          status:
                            $ref: '#/paths/~1v1~1coaching~1set-coaching-status~1%7Buser_id%7D/put/requestBody/content/application~1json/schema/properties/status'
                          assigned_coach:
                            type: object
                            properties:
                              user_id:
                                type: string
                                example: 6f7d2c79-c034-4929-b8b6-7d1c73b5df31
                                description: User ID of the Coach of the current Coachee.
                          invited_at:
                            type: string
                            example: '2021-08-25T00:00:00.000Z'
                            description: ISO Date when the invitation to the user was sent.
                          accepted_at:
                            type: string
                            example: '2021-08-25T00:00:00.000Z'
                            description: ISO Date when the user accepted the coaching invitation.
                  external_link:
                    type: object
                    properties:
                      external_link_type:
                        type: string
                        enum:
                          - mylinkx
                        example: mylinkx
                      keiyaku:
                        type: object
                        description: We store the exact payload we received from myLinkX servers
                        properties:
                          yuko_keiyaku_umu:
                            type: boolean
                          sub:
                            type: string
                            example: dSyxHV6OZAzM/tj7TpTVMQ==
                          ninchisho:
                            type: boolean
                      external_link_sub:
                        type: string
                        example: dSyxHV6OZAzM/tj7TpTVMQ==
                        description: It is the same content from the keiyaku.sub and user_info.sub
                      user_info:
                        type: object
                        description: We store the exact payload we received from myLinkX servers
                        properties:
                          email:
                            type: string
                            example: fake@example.com
                          family_name:
                            type: string
                            example: Smith
                          given_name:
                            type: string
                            example: John
                          sub:
                            type: string
                            example: dSyxHV6OZAzM/tj7TpTVMQ==
                  consents:
                    type: array
                    items:
                      $ref: '#/paths/~1v1~1users/post/requestBody/content/application~1json/schema/properties/consents/items'
                  promo_consent:
                    type: string
                    nullable: true
                    description: Deprecated. Migrated to consents.
                  pii_consent:
                    type: array
                    nullable: true
                    description: Deprecated. Migrated to consents.
                    items:
                      type: string
                  subscription:
                    type: object
                    description: Deprecated. We don't have subscriptions service anymore.
        '400':
          description: User was not created.
          content:
            application/json:
              examples:
                Duplicate Value:
                  value:
                    message: User was not created.
                    culprits:
                      - code: DUPLICATE_VALUE
                        field: field_name
                        original: example_email
                Organization does not exist:
                  value:
                    message: User was not created.
                    culprits:
                      - code: INVALID_VALUE
                        field: organization
                        original: invalid_organization
                        expected: Organization invalid_organization not found.
                Unknown value:
                  value:
                    message: User was not created.
                    culprits:
                      - code: UNKNOWN_VALUE
                        field: field_name
                        original: field_value
                        expected: Unrecognized field.
  /v1/users/search:
    post:
      tags:
        - user
      summary: Powerful user search and filter
      description: 'Send a POST request to Elasticsearch to find a user in the users table. An example will be provided here, but for advanced cases use guidances here as to how to form your payload; https://www.elastic.co/guide/en/elasticsearch/reference/current/search-search.html'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                query:
                  type: object
                  properties:
                    multi_match:
                      type: object
                      properties:
                        query:
                          type: string
                          example: Gurm
                        fields:
                          type: array
                          items:
                            type: string
                            example: family_name
      responses:
        '200':
          description: Default
          content:
            application/json:
              schema:
                type: object
                required:
                  - hits
                properties:
                  hits:
                    type: object
                    properties:
                      total:
                        type: object
                        properties:
                          value:
                            type: integer
                          relation:
                            type: string
                        required:
                          - value
                          - relation
                      hits:
                        type: array
                        items:
                          type: object
                    required:
                      - hits
                      - total
                      - max_score
  '/v1/users/{user_id}':
    delete:
      tags:
        - user
      summary: Delete user
      description: Deletes a user account
      security:
        - bearerAuth: []
      parameters:
        - name: user_id
          in: path
          description: The user id to be deleted
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted successfully (no response content)
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Unauthorized
        '404':
          description: No user found for the id provided
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: No user found for the ID provided
                  fingerprint:
                    type: string
                    example: 1a2b3c4d-5e6f-7g8h-9i0j-1k2l3m4n5o6p
                  culprits:
                    type: array
                    items:
                      type: string
                      example: ''
                    example: []
    get:
      tags:
        - user
      summary: Get user
      description: Get a user account
      security:
        - bearerAuth: []
      parameters:
        - name: user_id
          in: path
          description: The user id to be retrieved
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v1~1users/post/responses/200/content/application~1json/schema'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Unauthorized
        '404':
          description: No user found for the id provided
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: No user found for the ID provided
                  fingerprint:
                    type: string
                    example: 1a2b3c4d-5e6f-7g8h-9i0j-1k2l3m4n5o6p
                  culprits:
                    type: array
                    items:
                      type: string
                      example: ''
                    example: []
    patch:
      tags:
        - user
      summary: Update user
      description: Update a user account
      security:
        - bearerAuth: []
      parameters:
        - name: user_id
          in: path
          description: The user id to be retrieved
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                family_name:
                  type: string
                  example: John
                given_name:
                  type: string
                  example: Smith
                timezone:
                  $ref: '#/paths/~1v1~1users/post/requestBody/content/application~1json/schema/properties/timezone'
                language:
                  $ref: '#/paths/~1v1~1users/post/requestBody/content/application~1json/schema/properties/language'
                sex:
                  $ref: '#/paths/~1v1~1users/post/requestBody/content/application~1json/schema/properties/sex'
                product_tier:
                  $ref: '#/paths/~1v1~1users/post/requestBody/content/application~1json/schema/properties/product_tier'
                date_of_birth:
                  type: string
                  nullable: true
                  description: Format YYYY-MM-DD
                  example: 1970-01-01T00:00:00.000Z
                accept_tnc:
                  type: boolean
                  nullable: true
                  description: Defines if the user accepted the Terms and Conditions
                education:
                  $ref: '#/paths/~1v1~1users/post/requestBody/content/application~1json/schema/properties/education'
                ethnicity:
                  $ref: '#/paths/~1v1~1users/post/requestBody/content/application~1json/schema/properties/ethnicity'
                journey_settings:
                  $ref: '#/paths/~1v1~1users/post/requestBody/content/application~1json/schema/properties/journey_settings'
                consents:
                  type: array
                  items:
                    $ref: '#/paths/~1v1~1users/post/requestBody/content/application~1json/schema/properties/consents/items'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v1~1users/post/responses/200/content/application~1json/schema'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Unauthorized
        '404':
          description: No user found for the id provided
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: No user found for the ID provided
                  fingerprint:
                    type: string
                    example: 1a2b3c4d-5e6f-7g8h-9i0j-1k2l3m4n5o6p
                  culprits:
                    type: array
                    items:
                      type: string
                      example: ''
                    example: []
  '/v1/users/{user_id}/journey-settings':
    patch:
      tags:
        - user
      summary: Update journey settings
      description: Update journey settings for a particular user.Only support users and admins are able to update journey settings.
      parameters:
        - $ref: '#/components/parameters/user_id'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  journey_settings:
                    $ref: '#/paths/~1v1~1users/post/requestBody/content/application~1json/schema/properties/journey_settings'
        '400':
          description: Bad request. return HTTP 400
          content:
            application/json:
              examples:
                BAD_FORMAT_lifestyle_domain:
                  value:
                    error:
                      code: BAD_FORMAT
                      field: lifestyle_domain
                      original: walk
                      expected: 'None,NOT_SELECTED,COGNITIVE_TRAINING,EXERCISE,NUTRITION,SLEEP,SOCIAL_ENGAGEMENT,STRESS'
                BAD_FORMAT_cognitive_pathway:
                  value:
                    error:
                      code: BAD_FORMAT
                      field: cognitive_pathway
                      original: Brain
                      expected: 'None,MEMORY,EXECUTIVE_FUNCTION,ATTENTION'
                BAD_FORMAT_coaching_program_start_date:
                  value:
                    error:
                      code: BAD_FORMAT
                      field: coaching_program_start_date
                      original: tomorrow
                      expected: Input should be a valid date
                BAD_FORMAT_opt_out_of_articles:
                  value:
                    error:
                      code: BAD_FORMAT
                      field: opt_out_of_articles
                      original: 'Yes'
                      expected: Input should be a boolean
                BAD_FORMAT_null_journey_settings:
                  value:
                    error:
                      code: BAD_FORMAT
                      field: journey_settings
                      expected: Input should not be a null value
        '401':
          $ref: '#/components/responses/401'
  '/v1/users/{user_id}/external-link/{link_type}':
    get:
      tags:
        - external links
      summary: Get external link
      description: 'Retrieves external link data, including policy info. The endpoint my include other link_types in the future, but for now, the only implementation available is myLinkX.'
      parameters:
        - $ref: '#/components/parameters/user_id'
        - in: path
          name: link_type
          required: true
          schema:
            type: string
            enum:
              - mylinkx
            default: mylinkx
      responses:
        '200':
          description: 'The response is an Assessment Object, but the format depends on the exam type/subtype and the following parameters: translate and trial_phases.'
          content:
            application/json:
              schema:
                type: object
                description: External Link data. The attributes keiyaku and keiyaku_error_log are mutually exclusive.
                required:
                  - external_link_type
                  - external_link_sub
                  - user_info
                properties:
                  external_link_type:
                    type: string
                    example: mylinkx
                  external_link_sub:
                    type: string
                    example: tVdAcVbsWD9iGuUbWqz1PA==
                  user_info:
                    type: object
                    required:
                      - sub
                      - given_name
                      - family_name
                      - email
                    properties:
                      sub:
                        type: string
                        example: tVdAcVbsWD9iGuUbWqz1PA==
                      given_name:
                        type: string
                        example: John
                      family_name:
                        type: string
                        example: Smith
                      email:
                        type: string
                        example: john.smith@example.com
                  user_info_error_log:
                    $ref: '#/paths/~1v1~1users~1%7Buser_id%7D~1external-link~1%7Blink_type%7D/get/responses/200/content/application~1json/schema/properties/keiyaku_error_log'
                  keiyaku:
                    type: object
                    description: In this object we will just store exactly what was retrieved by myLinkX get policy info endpoint.
                    required:
                      - sub
                      - yuko_keiyaku_umu
                      - ninchisho
                    properties:
                      sub:
                        type: string
                        example: tVdAcVbsWD9iGuUbWqz1PA==
                      yuko_keiyaku_umu:
                        type: string
                        example: tVdAcVbsWD9iGuUbWqz1PA==
                      ninchisho:
                        type: string
                        example: tVdAcVbsWD9iGuUbWqz1PA==
                  keiyaku_error_log:
                    type: object
                    additionalProperties: true
                    description: 'When an error retrieving the policy info happens, we will just store whatever was the response.'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found. return HTTP 404
          content:
            application/json:
              examples:
                User Not Found:
                  value:
                    code: USR-401
                    message: Bad Request for get external link
                    culprits:
                      - category: INVALID_PATH_PARAMETERS
                        message: user not found
                        field: user-id
                        original: 37de36a8-6046-4c2d-9597-791039a13a56
                        expected: null
                    fingerprint: 8393060b-9ac7-423d-b2e3-fb8cbce4ff0d
    post:
      tags:
        - external links
      summary: Create external link
      description: 'Links the Neurotrack user record with an external provider. The endpoint my include other link_types in the future, but for now, the only implementation available is myLinkX.'
      parameters:
        - $ref: '#/components/parameters/user_id'
        - in: path
          name: link_type
          required: true
          schema:
            type: string
            enum:
              - mylinkx
            default: mylinkx
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - access_token
              properties:
                access_token:
                  type: string
                  example: 7LjJ_tcBM4LLOdoW1fTXc1FSj-EzosXVejJ8c5_sr68
                code:
                  type: string
                  example: bJVDtFjheTIOdOTWBPzdzcxcjFC1sN5gEe1SI9QGJIA
                token_type:
                  type: string
                  example: Bearer
                expires_in:
                  type: number
                  example: 3600
                scope:
                  type: string
                  example: openid
                id_token:
                  type: string
                  example: eyJraWQiOiI5YzI3OTUyNzYyMGY0YzYyOGIzMWYwMmQwZTQ3ZGJmYSIsImFsZyI6IlJTMjU2In0
      responses:
        '200':
          description: The response is an External Link Object.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v1~1users~1%7Buser_id%7D~1external-link~1%7Blink_type%7D/get/responses/200/content/application~1json/schema'
        '400':
          description: Bad request. return HTTP 400
          content:
            application/json:
              examples:
                Link Type not Supported:
                  value:
                    code: USR-402
                    message: Bad request data for creating user external link.
                    culprits:
                      - category: INVALID_PATH_PARAMETERS
                        message: link-type not supported
                        field: link-type
                        original: any-invalid-link-type
                        expected: mylinkx
                    fingerprint: 8393060b-9ac7-423d-b2e3-fb8cbce4ff0d
                User not Found:
                  value:
                    code: USR-402
                    message: Bad request data for creating user external link.
                    culprits:
                      - category: INVALID_PATH_PARAMETERS
                        message: User not found
                        field: user-id
                        original: invalid-user-id
                        expected: null
                    fingerprint: 8393060b-9ac7-423d-b2e3-fb8cbce4ff0d
                User already linked to an account:
                  value:
                    code: USR-402
                    message: Bad request data for creating user external link.
                    culprits:
                      - category: CONFLICT
                        message: User already linked to an account
                        field: user-id
                        original: user-uuid
                        expected: null
                    fingerprint: 8393060b-9ac7-423d-b2e3-fb8cbce4ff0d
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Bad request. return HTTP 400
          content:
            application/json:
              examples:
                User Not Found:
                  value:
                    code: USR-401
                    message: Bad Request for get external link
                    culprits:
                      - category: INVALID_PATH_PARAMETERS
                        message: user not found
                        field: user-id
                        original: 37de36a8-6046-4c2d-9597-791039a13a56
                        expected: null
                    fingerprint: 8393060b-9ac7-423d-b2e3-fb8cbce4ff0d
        '409':
          description: Conflict. return HTTP 409
          content:
            application/json:
              examples:
                External account already linked to another user:
                  value:
                    code: USR-405
                    message: Provided payload already linked to another user.
                    fingerprint: 8393060b-9ac7-423d-b2e3-fb8cbce4ff0d
        '424':
          description: Failed Dependency. return HTTP 424
          content:
            application/json:
              examples:
                Failed Dependency:
                  value:
                    code: USR-404
                    message: Unable to retrieve external user info with given payload.
                    culprits:
                      - category: FAILED_DEPENDENCY
                        message: Bearer error
                        field: access_token
                        original: null
                        expected: null
                    fingerprint: 8393060b-9ac7-423d-b2e3-fb8cbce4ff0d
    delete:
      tags:
        - external links
      summary: Remove external link
      description: 'Removes external link data. Even if the user didn''t have the external link, the endpoint will return a successful response to ensure it is not connected.'
      parameters:
        - $ref: '#/components/parameters/user_id'
        - in: path
          name: link_type
          required: true
          schema:
            type: string
            enum:
              - mylinkx
            default: mylinkx
      responses:
        '204':
          description: The resource was deleted successfully. No content.
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found. return HTTP 404
          content:
            application/json:
              examples:
                User Not Found:
                  value:
                    code: USR-401
                    message: Bad Request for get external link
                    culprits:
                      - category: INVALID_PATH_PARAMETERS
                        message: user not found
                        field: user-id
                        original: 37de36a8-6046-4c2d-9597-791039a13a56
                        expected: null
                    fingerprint: 8393060b-9ac7-423d-b2e3-fb8cbce4ff0d
  '/v1/coaching/coach/{user_id}':
    post:
      tags:
        - coaching
      summary: Create coach
      description: Convert an existing Neurotrack user into a Coach.
      parameters:
        - $ref: '#/components/parameters/user_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                freshworks_id:
                  type: string
                  example: fake_freshworks_id
      responses:
        '200':
          description: Default
          content:
            application/json:
              schema:
                properties:
                  chat:
                    type: object
                    properties:
                      user_id:
                        type: string
                        example: user_402c488a_ce85_44ec_986f_51768fc5bfd5
                      access_token:
                        type: string
                        example: token123
                  created_at:
                    type: string
                    example: '2021-05-25T00:00:00.000Z'
                  is_coach:
                    type: boolean
                    example: true
                  status:
                    $ref: '#/paths/~1v1~1coaching~1set-coaching-status~1%7Buser_id%7D/put/requestBody/content/application~1json/schema/properties/status'
        '400':
          description: Bad request. return HTTP 400
          content:
            application/json:
              examples:
                Given Parameter not valid:
                  value:
                    code: CO-101
                    message: given param not valid.
                    culprits:
                      - category: BAD_REQUEST
                        message: 'Error retrieving user data: <exception>'
                        field: user_id
                Create Sendbird User error:
                  value:
                    code: CO-103
                    message: Sendbird user creation error.
                    culprits:
                      - category: SENDBIRD_ERROR
                        message: 'Error occurred with provisioning sendbird user: <exception>'
                        field: user_id
                Update Database Error:
                  value:
                    code: E-528
                    message: Failed to put item in Database
                Increase number of clients Error:
                  value:
                    code: E-536
                    message: An unexpected error occurred at the Database while updating the item
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
    delete:
      tags:
        - coaching
      summary: Delete coach completely
      description: Remove all coaching attributes from the user.
      parameters:
        - $ref: '#/components/parameters/user_id'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad request. return HTTP 400
          content:
            application/json:
              examples:
                Delete Coach with Assigned Users:
                  value:
                    code: CO-105
                    message: Can not delete a coach assigned to a user
                    culprits:
                      - category: BAD_REQUEST
                        message: 'Error retrieving user data: <exception>'
                        field: user_id
                Delete Sendbird User error:
                  value:
                    code: CO-106
                    message: Sendbird user deletion error.
                    culprits:
                      - category: SENDBIRD_ERROR
                        message: 'Error occurred with provisioning sendbird user: <exception>'
                        field: user_id
                Database Delete Operation Error:
                  value:
                    code: E-539
                    message: An unexpected error occurred at the Database while deleting the item
                Clean Coaching Operation Error:
                  value:
                    code: E-536
                    message: An unexpected error occurred at the Database while updating the item
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
  '/v1/coaching/set-coaching-status/{user_id}':
    post:
      tags:
        - coaching
      summary: Invite user to coaching
      description: Invite a user to coaching. This endpoint is meant to be used by Neurotrack admin team and only allows the INVITED status.
      parameters:
        - $ref: '#/components/parameters/user_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                status:
                  $ref: '#/paths/~1v1~1coaching~1set-coaching-status~1%7Buser_id%7D/put/requestBody/content/application~1json/schema/properties/status'
      responses:
        '200':
          description: Default
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v1~1coaching~1set-coaching-status~1%7Buser_id%7D/put/responses/200/content/application~1json/schema'
        '400':
          description: Bad request. return HTTP 400
          content:
            application/json:
              examples:
                No coach available:
                  value:
                    code: CO-113
                    message: No coaches available for this organization
                Invalid Coaching Status:
                  value:
                    code: CO-107
                    message: Invalid Coaching Status
                Status not Allowed in this event:
                  value:
                    code: CO-108
                    message: Status is not allowed in this event
                Create Sendbird Chatroom error:
                  value:
                    code: CO-103
                    message: Sendbird chat creation error.
                Create Sendbird User error:
                  value:
                    code: CO-103
                    message: Sendbird user creation error.
                    culprits:
                      - category: SENDBIRD_ERROR
                        message: 'Error occurred with provisioning sendbird user: <exception>'
                        field: user_id
                Query Database Error:
                  value:
                    code: E-532
                    message: An unexpected error occurred while querying database
                Increase number of clients Error:
                  value:
                    code: E-536
                    message: An unexpected error occurred at the Database while updating the item
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
    put:
      tags:
        - coaching
      summary: Modify user's coaching status
      description: Let an user accept or decline a coaching invite. This endpoint is meant to be used by Neurotrack admin team and only allows the ACTIVE and NOT_YET statuses.
      parameters:
        - $ref: '#/components/parameters/user_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                status:
                  type: string
                  enum:
                    - NONE
                    - ACTIVE
                    - INVITED
                    - NOT_YET
                  example: ACTIVE
                  description: Current status of the user in the coaching program
      responses:
        '200':
          description: Default
          content:
            application/json:
              schema:
                required:
                  - status
                  - invited_at
                  - is_coach
                properties:
                  accepted_at:
                    type: string
                    example: '2021-05-25T00:00:00.000Z'
                  assigned_coach:
                    type: object
                    properties:
                      user_id:
                        type: string
                        example: user_402c488a_ce85_44ec_986f_51768fc5bfd5
                      uuid:
                        type: string
                        example: 402c488a-ce85-44ec-986f-51768fc5bfd5
                  status:
                    type: string
                    example: ACCEPTED
                  invited_at:
                    type: string
                    example: '2021-05-25T00:00:00.000Z'
                  is_coach:
                    type: boolean
                    example: false
                  chat:
                    type: object
                    properties:
                      user_id:
                        type: string
                        example: user_402c488a_ce85_44ec_986f_51768fc5bfd5
                      channel_url:
                        type: string
                        example: user_402c488a_ce85_44ec_986f_51768fc5bfd5
                      access_token:
                        type: string
                        example: token123
        '400':
          description: Bad request. return HTTP 400
          content:
            application/json:
              examples:
                Invalid Coaching Status:
                  value:
                    code: CO-107
                    message: Invalid Coaching Status
                Status not Allowed in this event:
                  value:
                    code: CO-108
                    message: Status is not allowed in this event
                Create Sendbird Chatroom error:
                  value:
                    code: CO-103
                    message: Sendbird chat creation error.
                Create Sendbird User error:
                  value:
                    code: CO-103
                    message: Sendbird user creation error.
                    culprits:
                      - category: SENDBIRD_ERROR
                        message: 'Error occurred with provisioning sendbird user: <exception>'
                        field: user_id
                Query Database Error:
                  value:
                    code: E-532
                    message: An unexpected error occurred while querying database
                Increase number of clients Error:
                  value:
                    code: E-536
                    message: An unexpected error occurred at the Database while updating the item
                User not invited:
                  value:
                    code: CO-112
                    message: User was not invited to Coaching
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
  /v1/coaching/messages/coach/articles/:
    post:
      tags:
        - coaching
      summary: Send articles as coach
      description: This endpoint let the Guided Path Service to send articles to a user as the coach.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - coachee_id
                - article_url
                - language
              properties:
                coachee_id:
                  type: string
                  description: user_id of the user in the coaching program
                  example: 402c488a-ce85-44ec-986f-51768fc5bfd5
                article_url:
                  type: string
                  description: URL of the article to be sent. It will be embedded into the translatable message on the coaching service.
                  example: 'https://www.example.com'
                language:
                  type: string
                  description: language used to send the message
                  example: en
      responses:
        '204':
          description: Successful response. Message successfully sent
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request. return HTTP 400
          content:
            application/json:
              examples:
                Missing required parameter:
                  value:
                    code: CO-015
                    message: Can't send article as coach
                    culprits:
                      - category: INVALID_REQUEST_DATA
                        message: 'Missing key: ''field_name'''
                coachee_id is invalid or not inactive:
                  value:
                    code: CO-015
                    message: Can't send article as coach
                    culprits:
                      - category: INVALID_REQUEST_DATA
                        message: coachee_id is invalid or not inactive
        '401':
          description: 'Unauthorized. return HTTP 401. In most case, it is required to refresh the token and pass a new access token in the new request.'
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  fingerprint:
                    type: string
                    description: AWS request ID to make it easier to find the logs on the server side.
                    example: caa74ba5-ba7e-4c46-9df5-e3d064682081
                  code:
                    type: string
                    description: Error code.
                    example: AUTH-006
                  message:
                    type: string
                    description: Error message.
                    example: Unauthorized
  '/v1/medical-integrations/nt-user-id/{integration-type}/{external-user-id}':
    get:
      tags:
        - medical integration
      summary: Lookup user
      security:
        - bearerAuth: []
      parameters:
        - name: integration-type
          in: path
          description: The type of name of third party integration (e.g. ATHENA)
          required: true
          schema:
            type: string
        - name: external-user-id
          in: path
          description: 'The user id provided by third party service. In Athena, it is the patientid'
          required: true
          schema:
            type: integer
      description: this api intends to work as a translator between external user ids (like patient_id at Athena) into neurotrack user id
      responses:
        '200':
          description: The user was found and its id is given.
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                    example: a1b2c3d4-e5f6-g7h8-i9j0-k1l2m3n4o5p6
        '400':
          description: The user was not found
          content:
            application/json:
              schema:
                type: object
  /v1/medical-integrations/organizations:
    post:
      security:
        - bearerAuth: []
      tags:
        - medical integration
      summary: Link organization
      description: Receives a organization payload from a recent created NT Org and sends it to Athena to create an Employer there. Other fields than organization in payload do not matter because won't be used.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                organization:
                  type: string
                  example: sample_organization_name
      responses:
        '200':
          description: This is an API to be used by another service (queued_updates) asynchronously.
          content:
            application/json:
              schema:
                properties:
                  description:
                    type: string
                    example: sample_description_name
                  default_language:
                    type: string
                    example: en or ja
                  status:
                    type: string
                    example: ACTIVE
                  title:
                    type: string
                    example: sample_title
                  mailchimp_audience_id:
                    type: string
                    example: null
                  api_url:
                    type: string
                    example: 'https://{stage}.dev-neurotrack.io'
                  platform:
                    type: string
                    example: null
                  athena_integration:
                    type: boolean
                    example: true
                  created_at:
                    type: string
                    example: '2022-04-04T15:31:57.798Z'
                  updated_at:
                    type: string
                    example: '2022-04-04T15:31:57.798Z'
                  deleted_at:
                    type: string
                    example: null
                  organization:
                    type: string
                    example: sample_organization_name
                  external_organization_code:
                    type: string
                    example: '0001'
  /organization:
    get:
      tags:
        - admin
      summary: Get Organization
      operationId: getOrganization
      description: 'By passing the organization name, you can retrieve the organization details.'
      parameters:
        - in: query
          name: searchString
          description: pass an optional search string for looking up inventory
          required: false
          schema:
            type: string
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1organization/post/requestBody/content/application~1json/schema'
        '400':
          description: bad input parameter
    post:
      tags:
        - admin
      summary: Create Organization
      operationId: createOrganization
      description: Creates an organization
      responses:
        '201':
          description: Organization created
        '400':
          description: Organization name must be unique
        '401':
          description: Unauthorized (not currently according to existing implementation 400 is returned for unauthorised
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - organization
                - title
                - description
                - default_language
              properties:
                organization:
                  type: string
                  example: Organization Name
                description:
                  type: string
                  example: Organization Description
                default_language:
                  type: string
                  example: en
                mailchimp_audience_id:
                  type: string
                  example: FAKE_MAILCHIMP_ID
        description: Organization to add
  /v1/exam-config/assets:
    post:
      tags:
        - exam config
      summary: Create asset
      description: Creates an asset and adds it to the exam-config table on DynamoDB.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                exam_code:
                  type: string
                  example: PSD_ABRIDGED_MOBILE
                name:
                  type: string
                  example: stimuli_chart.png
                type:
                  type: string
                  example: ASSET_IMAGE
                platform:
                  type: string
                  example: MOBILE
                language:
                  type: string
                  example: en
                configuration:
                  type: object
                  example:
                    location:
                      bucket: s3_bucket
                      key: key
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request. return HTTP 400
          content:
            application/json:
              schema:
                type: object
                required:
                  - code
                  - message
                properties:
                  code:
                    type: string
                    example: EC-010
                  message:
                    type: string
                    example: Cannot create asset.
                  culprits:
                    type: array
                    items:
                      type: object
                      required:
                        - category
                        - message
                      properties:
                        category:
                          type: string
                          description: Category of the error culprit.
                          example: INVALID_REQUEST_DATA
                        message:
                          type: string
                          description: 'Human readable error message, but currently not translated to different languages.'
                          example: Missing key 'exam_code'
                        field:
                          type: string
                          description: field in the input payload that caused the error.
                          example: exam_code
                        original:
                          type: object
                          description: The original value provided with the request.
                          example: null
                        expected:
                          type: object
                          description: Either a list of valid values or a language agnostic representation of the value needed.
                          example: null
                  extra:
                    type: object
                    description: Extra field to display context information to client.
                  fingerprint:
                    type: string
                    description: A unique ID for this specific failure. Usually the AWS request-Id to help us debug the issue on the server-side.
                    example: 1c724b87-dcf4-4a1e-99e5-f8d21da50d0e
        '401':
          description: Unauthorized request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
  /v1/exam-config/trials:
    post:
      tags:
        - exam config
      summary: Create trial
      description: Creates a trial and adds it to the exam-config table on DynamoDB.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                exam_code:
                  type: string
                  example: PSD_ABRIDGED_MOBILE
                name:
                  type: string
                  example: stimuli_chart.png
                component:
                  type: string
                  example: instructions_title_screen
                component_data:
                  type: object
                  example:
                    body:
                      image:
                        filename: f3b965f84f9380aad58835f83b936917.png
                    header:
                      headline:
                        text: sample_exam_title
                      content:
                        text: sample_exam_intro_1_paragraph
                    navigation:
                      - close
                asset_codes:
                  type: object
                  example:
                    - 0083ea57c38767daf7e9041936fc4c49.png
                platform:
                  type: string
                  example: MOBILE
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request. return HTTP 400
          content:
            application/json:
              schema:
                type: object
                required:
                  - code
                  - message
                properties:
                  code:
                    type: string
                    example: EC-020
                  message:
                    type: string
                    example: Trial payload does not adhere to schema.
                  culprits:
                    type: array
                    items:
                      type: object
                      required:
                        - category
                        - message
                      properties:
                        category:
                          type: string
                          description: Category of the error culprit.
                          example: INVALID_REQUEST_DATA
                        message:
                          type: string
                          description: 'Human readable error message, but currently not translated to different languages.'
                          example: Missing key 'exam_code'
                        field:
                          type: string
                          description: field in the input payload that caused the error.
                          example: exam_code
                        original:
                          type: object
                          description: The original value provided with the request.
                          example: null
                        expected:
                          type: object
                          description: Either a list of valid values or a language agnostic representation of the value needed.
                          example: null
                  extra:
                    type: object
                    description: Extra field to display context information to client.
                  fingerprint:
                    type: string
                    description: A unique ID for this specific failure. Usually the AWS request-Id to help us debug the issue on the server-side.
                    example: 1c724b87-dcf4-4a1e-99e5-f8d21da50d0e
        '401':
          description: Unauthorized request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
  /v1/exam-config/exams:
    post:
      tags:
        - exam config
      summary: Create exam
      description: Creates an exam and adds it to the exam-config table on DynamoDB.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                exam_code:
                  type: string
                  example: FLANKER_MOBILE_V1
                name:
                  type: string
                  example: Flanker Version1 (Mobile) Set71
                type:
                  type: string
                  example: EXAM_FLANKER
                subtype:
                  type: string
                  example: ATTENTION_MOBILE
                set_names:
                  type: object
                  example:
                    - SET_71
                rules:
                  type: object
                phases:
                  type: object
                  example:
                    - phase_display_type: INSTRUCTION
                    - phase_name: pre_practice_instruction
                    - phase_configuration:
                        accepted_input_types: []
                        component_data: {}
                        requires_perception_data: false
                        tutorial_mode: false
                    - phase_group: practice
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request. return HTTP 400
          content:
            application/json:
              schema:
                type: object
                required:
                  - code
                  - message
                properties:
                  code:
                    type: string
                    example: EC-030
                  message:
                    type: string
                    example: Exam payload does not adhere to schema.
                  culprits:
                    type: array
                    items:
                      type: object
                      required:
                        - category
                        - message
                      properties:
                        category:
                          type: string
                          description: Category of the error culprit.
                          example: INVALID_REQUEST_DATA
                        message:
                          type: string
                          description: 'Human readable error message, but currently not translated to different languages.'
                          example: Missing key 'exam_code'
                        field:
                          type: string
                          description: field in the input payload that caused the error.
                          example: exam_code
                        original:
                          type: object
                          description: The original value provided with the request.
                          example: null
                        expected:
                          type: object
                          description: Either a list of valid values or a language agnostic representation of the value needed.
                          example: null
                  extra:
                    type: object
                    description: Extra field to display context information to client.
                  fingerprint:
                    type: string
                    description: A unique ID for this specific failure. Usually the AWS request-Id to help us debug the issue on the server-side.
                    example: 1c724b87-dcf4-4a1e-99e5-f8d21da50d0e
        '401':
          description: Unauthorized request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
  '/v1/exam-config/exams/{exam_id}':
    put:
      tags:
        - exam config
      summary: Update exam and sets
      description: Update an exam and its exam sets
      parameters:
        - $ref: '#/components/parameters/exam_id'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  exam_code:
                    type: string
                    example: SYMBOL_DIGITS_ABRIDGED_V1
                  name:
                    type: string
                    example: Paired Symbol Digit Abridged
                  type:
                    type: string
                    example: EXAM_PROCESSING_SPEED
                  subtype:
                    type: string
                    example: PAIRED_SYMBOL_DIGITS_ABRIDGED
                  type_subtype:
                    type: string
                    example: EXAM_PROCESSING_SPEED|PAIRED_SYMBOL_DIGITS_ABRIDGED
                  set_names:
                    type: array
                    items:
                      type: string
                    example:
                      - set001
                  rules:
                    type: object
                  translations:
                    type: object
                    example:
                      en: {}
                  phases:
                    type: array
                    items:
                      type: object
                      properties:
                        phase_display_type:
                          type: string
                          example: INSTRUCTION
                        phase_group:
                          type: string
                          example: PRACTICE
                        phase_name:
                          type: string
                          example: 01_pre_practice_instructions
                        version:
                          type: string
                          example: 1.0.0
                        phase_configuration:
                          type: object
                          properties:
                            accepted_input_types:
                              type: array
                              items:
                                type: string
                              example: []
                            component_data:
                              type: object
                              example: {}
                            requires_perception_data:
                              type: boolean
                              example: false
                            tutorial_mode:
                              type: boolean
                              example: false
        '401':
          description: Unauthorized request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
    delete:
      tags:
        - exam config
      summary: Delete exam
      description: Creates an exam and adds it to the exam-config table on DynamoDB.
      parameters:
        - $ref: '#/components/parameters/exam_id'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
  '/v1/exam-config/exam-sets/{exam_id}':
    post:
      tags:
        - exam config
      summary: Create exam set
      description: Creates exam sets and adds it to the exam-config table on DynamoDB.
      parameters:
        - $ref: '#/components/parameters/exam_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                resource_bundle:
                  type: object
                  example:
                    bucket: s3_bucket
                    key: s3_key
                set_number:
                  type: string
                  example: '10'
                phase_type:
                  type: string
                  example: practice
                platform:
                  type: string
                  example: MOBILE
                trials:
                  type: object
                  example:
                    - order: '0002'
                    - trial_name: stimuli_chart.png
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request. return HTTP 400
          content:
            application/json:
              schema:
                type: object
                required:
                  - code
                  - message
                properties:
                  code:
                    type: string
                    example: EC-040
                  message:
                    type: string
                    example: ExamSet payload does not adhere to schema.
                  culprits:
                    type: array
                    items:
                      type: object
                      required:
                        - category
                        - message
                      properties:
                        category:
                          type: string
                          description: Category of the error culprit.
                          example: INVALID_REQUEST_DATA
                        message:
                          type: string
                          description: 'Human readable error message, but currently not translated to different languages.'
                          example: Missing key 'phase_type'
                        field:
                          type: string
                          description: field in the input payload that caused the error.
                          example: exam_code
                        original:
                          type: object
                          description: The original value provided with the request.
                          example: null
                        expected:
                          type: object
                          description: Either a list of valid values or a language agnostic representation of the value needed.
                          example: null
                  extra:
                    type: object
                    description: Extra field to display context information to client.
                  fingerprint:
                    type: string
                    description: A unique ID for this specific failure. Usually the AWS request-Id to help us debug the issue on the server-side.
                    example: 1c724b87-dcf4-4a1e-99e5-f8d21da50d0e
        '401':
          description: Unauthorized request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
  '/v1/exam-config/exam-sets/{exam_id}/{set_name}':
    get:
      tags:
        - exam config
      summary: Get exam set info
      description: 'Get the exam, phase and trial data for a specific set of an exam.'
      parameters:
        - $ref: '#/components/parameters/exam_id'
        - $ref: '#/components/parameters/set_name'
        - in: query
          name: platform
          schema:
            type: string
            enum:
              - MOBILE
              - WEB
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  exam_code:
                    type: string
                    example: SYMBOL_DIGITS_ABRIDGED_V1
                  set_name:
                    type: string
                    example: set001
                  resource_bundle:
                    type: object
                  rules:
                    type: object
                  phases:
                    type: array
                    items:
                      type: object
                      properties:
                        phase_type:
                          type: string
                          example: 01_pre_practice_instructions
                        phase_group:
                          type: string
                          example: PRACTICE
                        platform:
                          type: string
                          example: MOBILE
                        translations:
                          type: object
                          example:
                            en: {}
                        phase:
                          $ref: '#/paths/~1v1~1exam-config~1exams~1%7Bexam_id%7D/put/responses/200/content/application~1json/schema/properties/phases/items'
                        exam_set_trials:
                          type: array
                          items:
                            type: object
                            properties:
                              order:
                                type: string
                                example: 1
                              exam_trial_id:
                                type: string
                                example: SYMBOL_DIGITS_ABRIDGED_V1#set100#MOBILE#01_pre_practice_instructions#0001
                              trial:
                                type: object
                                properties:
                                  exam_code:
                                    type: string
                                    example: SYMBOL_DIGITS_ABRIDGED_V1
                                  platform:
                                    type: string
                                    example: MOBILE
                                  component:
                                    type: string
                                    example: instructions_title_screen
                                  code:
                                    type: string
                                    example: SYMBOL_DIGITS_ABRIDGED_V1#symbol_match_pre_practice_instruction_mobile_01
                                  name:
                                    type: string
                                    example: symbol_match_pre_practice_instruction_mobile_01
                                  component_data:
                                    type: object
                                  delay_display_seconds:
                                    type: number
                                    nullable: true
                                    example: null
                                  display_seconds:
                                    type: number
                                    nullable: true
                                    example: null
                                  trial_scoring_type:
                                    type: string
                                    nullable: true
                                    example: null
                                  requires_perception_data:
                                    type: boolean
                                    nullable: true
                                    example: null
                                  translations:
                                    type: object
                                    example:
                                      en: {}
                                  assets:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        exam_code:
                                          type: string
                                          example: SYMBOL_DIGITS_ABRIDGED_V1
                                        platform:
                                          type: string
                                          example: MOBILE
                                        code:
                                          type: string
                                          example: SYMBOL_DIGITS_ABRIDGED_V1#nt_cognitive_assessments_symbol_match_bg.png
                                        filename:
                                          type: string
                                          example: 00000000abc0359804d6789fffffffff.png
                                        name:
                                          type: string
                                          example: nt_cognitive_assessments_symbol_match_bg.png
                                        type:
                                          type: string
                                          example: ASSET_IMAGE
                                        subtype:
                                          type: string
                                          example: PNG
                                        language:
                                          type: string
                                          nullable: true
                                          example: null
                                        configuration:
                                          type: object
                                          example:
                                            location: {}
                  exam:
                    $ref: '#/paths/~1v1~1exam-config~1exams~1%7Bexam_id%7D/put/responses/200/content/application~1json/schema'
        '401':
          description: Unauthorized request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - code
                  - message
                properties:
                  code:
                    type: string
                    example: EC-050
                  message:
                    type: string
                    example: Exam code not found.
  '/v2/users/{user_id}/assessments/{assessment_id}':
    get:
      tags:
        - exam serving
      summary: Get an assessment for the user
      description: 'Get the content of an specific assessment to show on the user device We use the same endpoint for all exams, so as we document more exams, the real Phases and Trial Components used in a given Exam will be just a subset of what is documented here.'
      parameters:
        - $ref: '#/components/parameters/user_id'
        - $ref: '#/components/parameters/assessment_id'
        - in: header
          name: Accept-Language
          description: Language used to translate content.
          schema:
            type: string
            enum:
              - en
              - ja
            default: en
        - in: query
          name: translate
          description: 'Translate the content if true. Otherwise, returns the translation keys.'
          schema:
            type: boolean
            enum:
              - true
              - false
            default: true
        - in: query
          name: trial_phases
          description: transform trials to trial_phases response
          schema:
            type: boolean
            enum:
              - true
              - false
            default: false
      responses:
        '200':
          description: 'The response is an Assessment Object, but the format depends on the exam type/subtype and the following parameters: translate and trial_phases.'
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - user_id
                  - status
                  - type
                  - subtype
                  - base_media_url
                  - phases
                properties:
                  id:
                    type: string
                    example: Assessment-7ad63204-c367-4dcf-9245-e87e08f67b99
                  user_id:
                    type: string
                    example: 6e9dddd4-516e-46f5-b929-7c572a1b3d63
                  status:
                    type: string
                    enum:
                      - NOT_STARTED
                      - PERCEPTION_STARTED
                      - PERCEPTION_COMPLETED
                      - PERCEPTION_ENDED
                      - PERCEPTION_VALIDATION_FAILED
                      - PERCEPTION_FAILED
                      - TRANSFORMATION_STARTED
                      - TRANSFORMATION_COMPLETED
                      - TRANSFORMATION_FAILED
                      - AUTOMATED_SCORING_STARTED
                      - AUTOMATED_SCORING_COMPLETED
                      - AUTOMATED_SCORING_FAILED
                      - AUTOMATED_SCORING_UNSCORABLE
                      - AUTOMATED_SCORING_UNAVAILABLE
                      - AUTOMATED_SCORING_VERIFICATION_STARTED
                      - AUTOMATED_SCORING_VERIFICATION_APPROVED
                      - AUTOMATED_SCORING_VERIFICATION_DENIED
                      - AUTOMATED_SCORING_VERIFICATION_FAILED
                      - RESULT_AVAILABLE
                      - RESULT_FAILED
                  type:
                    type: string
                    enum:
                      - EXAM_FLANKER
                      - EXAM_GO_NO_GO
                      - EXAM_IMPRINT_MEMORY_ASSESSMENT
                      - EXAM_PAIRED_ASSOCIATION
                      - EXAM_PROCESSING_SPEED
                      - EXAM_SURVEY
                      - EXAM_TRAILS
                  subtype:
                    type: string
                    enum:
                      - ATTENTION_MOBILE
                      - ATTENTION_WEB
                      - COGNITIVE_TRAINING
                      - EXERCISE
                      - INHIBITION_MOBILE
                      - INHIBITION_WEB
                      - NUTRITION
                      - PAIRED_ITEM_PRICE_MOBILE
                      - PAIRED_ITEM_PRICE_WEB
                      - PAIRED_RECOGNITION_ABRIDGED
                      - PAIRED_RECOGNITION_ABRIDGED_WEB
                      - PAIRED_SYMBOL_DIGITS_ABRIDGED_MOBILE
                      - PAIRED_SYMBOL_DIGITS_ABRIDGED_WEB
                      - SLEEP
                      - SOCIAL_ENGAGEMENT
                      - STRESS
                      - TRAILS_B_MOBILE
                      - TRAILS_B_WEB
                  base_media_url:
                    type: string
                    example: 'https://api.dev-neurotrack.io/v1/exam-media'
                  phases:
                    type: array
                    items:
                      type: object
                      required:
                        - version
                        - phase_display_type
                        - phase_configuration
                        - trials
                      properties:
                        version:
                          type: string
                          example: 1.0.0
                        phase_display_type:
                          type: string
                          example: INSTRUCTION
                          enum:
                            - FLANKER
                            - GO_NO_GO
                            - INSTRUCTION
                            - PAIRED_IMAGE_GUIDED
                            - PAIRED_IMAGE_UNGUIDED
                            - PAIRED_ITEM_PRICE_PHASE_GUIDED
                            - PAIRED_ITEM_PRICE_PHASE_UNGUIDED
                            - PAIRED_SYMBOL_DIGITS
                            - TRAILS_B
                        phase_configuration:
                          anyOf:
                            - title: Instruction phase
                              allOf:
                                - type: object
                                  properties:
                                    component_data:
                                      type: object
                                    accepted_input_types:
                                      type: array
                                      description: List of input types accepted for that specific phase.
                                      items:
                                        type: string
                                    tutorial_mode:
                                      type: boolean
                                    requires_perception_data:
                                      type: boolean
                                    resource_bundle:
                                      type: string
                                      description: Name of the ZIP file with the exam bundle.
                                      example: ca532680fa0c68d0005f76da93886959.zip
                                - type: object
                                  required:
                                    - accepted_input_types
                                    - tutorial_mode
                                    - resource_bundle
                                    - requires_perception_data
                                  properties:
                                    accepted_input_types:
                                      type: array
                                      description: 'For this phase, it should be an empty array.'
                                      items:
                                        type: string
                                    tutorial_mode:
                                      type: boolean
                                      description: 'For this phase, it should be False to indicate it is not the practice phase.'
                                    requires_perception_data:
                                      type: boolean
                                      description: 'For this phase, it should be False to indicate we''re not collecting perception data.'
                            - title: Image pairs guided phase
                              allOf:
                                - $ref: '#/paths/~1v2~1users~1%7Buser_id%7D~1assessments~1%7Bassessment_id%7D/get/responses/200/content/application~1json/schema/properties/phases/items/properties/phase_configuration/anyOf/0/allOf/0'
                                - type: object
                                  required:
                                    - accepted_input_types
                                    - tutorial_mode
                                    - requires_perception_data
                                    - resource_bundle
                                    - display_seconds
                                  properties:
                                    accepted_input_types:
                                      type: array
                                      description: Indicates the input type for the trials.
                                      items:
                                        type: string
                                        enum:
                                          - VIDEO
                                          - SELECTION
                                          - KEYSTROKE
                                    tutorial_mode:
                                      type: boolean
                                      description: 'For this phase, it should be True to indicate it is the practice phase.'
                                    requires_perception_data:
                                      type: boolean
                                      description: 'For this phase, it should be True to indicate we need to collect perception data and send to the backend.'
                                    display_seconds:
                                      type: integer
                                      description: Time (in seconds) that each trial will be displayed. This attribute can be overriden by each trial.
                                      example: 5
                            - title: Image pairs unguided phase
                              allOf:
                                - $ref: '#/paths/~1v2~1users~1%7Buser_id%7D~1assessments~1%7Bassessment_id%7D/get/responses/200/content/application~1json/schema/properties/phases/items/properties/phase_configuration/anyOf/0/allOf/0'
                                - type: object
                                  required:
                                    - accepted_input_types
                                    - tutorial_mode
                                    - requires_perception_data
                                    - resource_bundle
                                    - display_seconds
                                  properties:
                                    accepted_input_types:
                                      type: array
                                      description: Indicates the input type for the trials.
                                      items:
                                        type: string
                                        enum:
                                          - VIDEO
                                          - SELECTION
                                          - KEYSTROKE
                                    tutorial_mode:
                                      type: boolean
                                      description: 'For this phase, it should be True to indicate it is the practice phase.'
                                    requires_perception_data:
                                      type: boolean
                                      description: 'For this phase, it should be True to indicate we need to collect perception data and send to the backend.'
                                    display_seconds:
                                      type: integer
                                      description: Time (in seconds) that each trial will be displayed. This attribute can be overriden by each trial.
                                      example: 5
                        trials:
                          type: array
                          items:
                            anyOf:
                              - title: Blank Trial
                                allOf:
                                  - type: object
                                    required:
                                      - id
                                      - exam_trial_id
                                    properties:
                                      id:
                                        type: string
                                        description: Unique identifier for a Trial
                                        example: Trial-738d3277-c92b-49cd-b065-55524602ae91
                                      exam_trial_id:
                                        type: string
                                        description: 'Unique identifier for an Exam Trial. A trial can be assigned to multiple exams, so this ID is unique to the link between the Exam and the trial.'
                                        example: b0ce833c-13ce-4c78-8724-29997b2f588d
                                      assets:
                                        type: array
                                        description: List of assets used by that trial
                                        items:
                                          type: object
                                          properties:
                                            id:
                                              type: string
                                              description: Unique identifier for an Asset
                                              example: Asset-0508d5b6-4573-4643-8445-53d1350eea41
                                            name:
                                              type: string
                                              description: 'Human readable name for the asset. In some cases, this is used on Lokalise to allow the usage of different assets according to the language.'
                                              example: nt_cognitiveassessments-lightreaction-bg.png
                                            filename:
                                              type: string
                                              description: Name of the file stored in the server
                                              example: f3b965f84f9380aad58835f83b936917.png
                                  - type: object
                                    required:
                                      - component
                                      - display_seconds
                                      - requires_perception_data
                                    properties:
                                      component:
                                        type: string
                                        description: Blank component used to add a pause between two trials.
                                        example: blank
                                      display_seconds:
                                        type: integer
                                        example: 2
                                      requires_perception_data:
                                        type: boolean
                                        description: 'Indicates we don''t need to gather perception for this trial. For Blank Component, it should be False.'
                                      component_data:
                                        type: object
                              - title: Instructions with only text
                                allOf:
                                  - $ref: '#/paths/~1v2~1users~1%7Buser_id%7D~1assessments~1%7Bassessment_id%7D/get/responses/200/content/application~1json/schema/properties/phases/items/properties/trials/items/anyOf/0/allOf/0'
                                  - type: object
                                    required:
                                      - component
                                      - component_data
                                    properties:
                                      component:
                                        type: string
                                        description: Instructions Text Only Trial.
                                        example: instructions_text_only
                                      component_data:
                                        type: object
                                        required:
                                          - body
                                        properties:
                                          body:
                                            type: object
                                            required:
                                              - headline
                                              - content
                                            properties:
                                              headline:
                                                $ref: '#/paths/~1v2~1users~1%7Buser_id%7D~1assessments~1%7Bassessment_id%7D/get/responses/200/content/application~1json/schema/properties/phases/items/properties/trials/items/anyOf/1/allOf/1/properties/component_data/properties/body/properties/content'
                                              content:
                                                type: object
                                                required:
                                                  - text
                                                properties:
                                                  text:
                                                    type: string
                                                    description: Text for the label. It is subject to translation according to the Accept-Language parameter in the request header.
                                          navigation:
                                            type: array
                                            items:
                                              type: string
                                              description: Shows the navigation options available in the current Trial.
                                              enum:
                                                - close
                                                - previous
                                                - next
                              - title: Instructions title screen
                                allOf:
                                  - $ref: '#/paths/~1v2~1users~1%7Buser_id%7D~1assessments~1%7Bassessment_id%7D/get/responses/200/content/application~1json/schema/properties/phases/items/properties/trials/items/anyOf/0/allOf/0'
                                  - type: object
                                    required:
                                      - component
                                      - component_data
                                    properties:
                                      component:
                                        type: string
                                        description: Instructions Title Screen Trial.
                                        example: instructions_title_screen
                                      component_data:
                                        type: object
                                        required:
                                          - body
                                          - footer
                                        properties:
                                          body:
                                            type: object
                                            required:
                                              - headline
                                              - content
                                            properties:
                                              image:
                                                type: object
                                                required:
                                                  - filename
                                                properties:
                                                  filename:
                                                    type: string
                                                    description: 'The asset name for the image. For Web exams, it will be a SVG file. Mobile exams use PNG files.'
                                                    example: f3b965f84f9380aad58835f83b936917.png
                                              headline:
                                                $ref: '#/paths/~1v2~1users~1%7Buser_id%7D~1assessments~1%7Bassessment_id%7D/get/responses/200/content/application~1json/schema/properties/phases/items/properties/trials/items/anyOf/1/allOf/1/properties/component_data/properties/body/properties/content'
                                              content:
                                                $ref: '#/paths/~1v2~1users~1%7Buser_id%7D~1assessments~1%7Bassessment_id%7D/get/responses/200/content/application~1json/schema/properties/phases/items/properties/trials/items/anyOf/1/allOf/1/properties/component_data/properties/body/properties/content'
                                          footer:
                                            type: object
                                            properties:
                                              button:
                                                type: object
                                                required:
                                                  - action
                                                  - style
                                                  - text
                                                  - value
                                                properties:
                                                  action:
                                                    type: string
                                                    example: next
                                                  style:
                                                    type: string
                                                    example: solid
                                                  text:
                                                    type: string
                                                    description: The text inside the button. This content might change according to the Accept-Language parameter in the request header.
                                                    example: Let's begin
                                                  value:
                                                    type: string
                                                    example: continue
                                                  disabled:
                                                    type: boolean
                                                    description: A boolean that sets the disabled state for the rendered button when true. The default value in absense should be false.
                                                    default: false
                                          navigation:
                                            type: array
                                            items:
                                              $ref: '#/paths/~1v2~1users~1%7Buser_id%7D~1assessments~1%7Bassessment_id%7D/get/responses/200/content/application~1json/schema/properties/phases/items/properties/trials/items/anyOf/1/allOf/1/properties/component_data/properties/navigation/items'
                              - title: Instructions with header image
                                allOf:
                                  - $ref: '#/paths/~1v2~1users~1%7Buser_id%7D~1assessments~1%7Bassessment_id%7D/get/responses/200/content/application~1json/schema/properties/phases/items/properties/trials/items/anyOf/0/allOf/0'
                                  - type: object
                                    required:
                                      - component
                                      - component_data
                                    properties:
                                      component:
                                        type: string
                                        description: Instructions Text Only Trial.
                                        example: instructions_header_image
                                      component_data:
                                        type: object
                                        required:
                                          - header
                                          - body
                                        properties:
                                          header:
                                            type: object
                                            required:
                                              - headline
                                              - content
                                            properties:
                                              headline:
                                                $ref: '#/paths/~1v2~1users~1%7Buser_id%7D~1assessments~1%7Bassessment_id%7D/get/responses/200/content/application~1json/schema/properties/phases/items/properties/trials/items/anyOf/1/allOf/1/properties/component_data/properties/body/properties/content'
                                              content:
                                                $ref: '#/paths/~1v2~1users~1%7Buser_id%7D~1assessments~1%7Bassessment_id%7D/get/responses/200/content/application~1json/schema/properties/phases/items/properties/trials/items/anyOf/1/allOf/1/properties/component_data/properties/body/properties/content'
                                          body:
                                            type: object
                                            properties:
                                              image:
                                                $ref: '#/paths/~1v2~1users~1%7Buser_id%7D~1assessments~1%7Bassessment_id%7D/get/responses/200/content/application~1json/schema/properties/phases/items/properties/trials/items/anyOf/2/allOf/1/properties/component_data/properties/body/properties/image'
                                          navigation:
                                            type: array
                                            items:
                                              $ref: '#/paths/~1v2~1users~1%7Buser_id%7D~1assessments~1%7Bassessment_id%7D/get/responses/200/content/application~1json/schema/properties/phases/items/properties/trials/items/anyOf/1/allOf/1/properties/component_data/properties/navigation/items'
                              - title: Instructions with header image and 2 buttons
                                allOf:
                                  - $ref: '#/paths/~1v2~1users~1%7Buser_id%7D~1assessments~1%7Bassessment_id%7D/get/responses/200/content/application~1json/schema/properties/phases/items/properties/trials/items/anyOf/0/allOf/0'
                                  - type: object
                                    required:
                                      - component
                                      - component_data
                                    properties:
                                      component:
                                        type: string
                                        description: Instructions Text Only Trial.
                                        example: instructions_header_image_two_button
                                      component_data:
                                        type: object
                                        required:
                                          - header
                                          - body
                                          - footer
                                        properties:
                                          header:
                                            type: object
                                            required:
                                              - headline
                                              - content
                                            properties:
                                              headline:
                                                $ref: '#/paths/~1v2~1users~1%7Buser_id%7D~1assessments~1%7Bassessment_id%7D/get/responses/200/content/application~1json/schema/properties/phases/items/properties/trials/items/anyOf/1/allOf/1/properties/component_data/properties/body/properties/content'
                                              content:
                                                $ref: '#/paths/~1v2~1users~1%7Buser_id%7D~1assessments~1%7Bassessment_id%7D/get/responses/200/content/application~1json/schema/properties/phases/items/properties/trials/items/anyOf/1/allOf/1/properties/component_data/properties/body/properties/content'
                                          body:
                                            type: object
                                            properties:
                                              image:
                                                $ref: '#/paths/~1v2~1users~1%7Buser_id%7D~1assessments~1%7Bassessment_id%7D/get/responses/200/content/application~1json/schema/properties/phases/items/properties/trials/items/anyOf/2/allOf/1/properties/component_data/properties/body/properties/image'
                                          footer:
                                            type: object
                                            required:
                                              - leading_button
                                              - trailing_button
                                            properties:
                                              leading_button:
                                                $ref: '#/paths/~1v2~1users~1%7Buser_id%7D~1assessments~1%7Bassessment_id%7D/get/responses/200/content/application~1json/schema/properties/phases/items/properties/trials/items/anyOf/2/allOf/1/properties/component_data/properties/footer/properties/button'
                                              trailing_button:
                                                $ref: '#/paths/~1v2~1users~1%7Buser_id%7D~1assessments~1%7Bassessment_id%7D/get/responses/200/content/application~1json/schema/properties/phases/items/properties/trials/items/anyOf/2/allOf/1/properties/component_data/properties/footer/properties/button'
                                          navigation:
                                            type: array
                                            items:
                                              $ref: '#/paths/~1v2~1users~1%7Buser_id%7D~1assessments~1%7Bassessment_id%7D/get/responses/200/content/application~1json/schema/properties/phases/items/properties/trials/items/anyOf/1/allOf/1/properties/component_data/properties/navigation/items'
                              - title: Instructions with 2 images
                                allOf:
                                  - $ref: '#/paths/~1v2~1users~1%7Buser_id%7D~1assessments~1%7Bassessment_id%7D/get/responses/200/content/application~1json/schema/properties/phases/items/properties/trials/items/anyOf/0/allOf/0'
                                  - type: object
                                    required:
                                      - assets
                                      - component
                                      - component_data
                                    properties:
                                      component:
                                        type: string
                                        description: 'Component with two images, side by side.'
                                        example: two_images_horizontal
                                      component_data:
                                        type: object
                                        required:
                                          - body
                                        properties:
                                          body:
                                            type: object
                                            properties:
                                              leading_image:
                                                $ref: '#/paths/~1v2~1users~1%7Buser_id%7D~1assessments~1%7Bassessment_id%7D/get/responses/200/content/application~1json/schema/properties/phases/items/properties/trials/items/anyOf/2/allOf/1/properties/component_data/properties/body/properties/image'
                                              trailing_image:
                                                $ref: '#/paths/~1v2~1users~1%7Buser_id%7D~1assessments~1%7Bassessment_id%7D/get/responses/200/content/application~1json/schema/properties/phases/items/properties/trials/items/anyOf/2/allOf/1/properties/component_data/properties/body/properties/image'
                              - title: Instructions with two buttons
                                allOf:
                                  - $ref: '#/paths/~1v2~1users~1%7Buser_id%7D~1assessments~1%7Bassessment_id%7D/get/responses/200/content/application~1json/schema/properties/phases/items/properties/trials/items/anyOf/5'
                                  - type: object
                                    required:
                                      - assets
                                      - component
                                      - component_data
                                    properties:
                                      component:
                                        type: string
                                        description: 'Component with two images, side by side.'
                                        example: two_images_horizontal_two_buttons
                                      trial_scoring_type:
                                        type: string
                                        enum:
                                          - sham
                                          - target
                                          - foil
                                      component_data:
                                        type: object
                                        required:
                                          - body
                                          - footer
                                        properties:
                                          footer:
                                            type: object
                                            properties:
                                              leading_button:
                                                $ref: '#/paths/~1v2~1users~1%7Buser_id%7D~1assessments~1%7Bassessment_id%7D/get/responses/200/content/application~1json/schema/properties/phases/items/properties/trials/items/anyOf/2/allOf/1/properties/component_data/properties/footer/properties/button'
                                              trailing_button:
                                                $ref: '#/paths/~1v2~1users~1%7Buser_id%7D~1assessments~1%7Bassessment_id%7D/get/responses/200/content/application~1json/schema/properties/phases/items/properties/trials/items/anyOf/2/allOf/1/properties/component_data/properties/footer/properties/button'
              examples:
                Image Pairs:
                  value:
                    id: Assessment-20238674-61c4-4290-bf0d-6be2764cf284
                    user_id: 991e8a2f-9151-4853-bb1c-49b1095a7d00
                    status: NOT_STARTED
                    type: EXAM_IMPRINT_MEMORY_ASSESSMENT
                    subtype: PAIRED_RECOGNITION_ABRIDGED_WEB
                    base_media_url: 'https://api.jp-neurotrack.io/v1/exam-media'
                    phases:
                      - phase_display_type: INSTRUCTION
                        phase_configuration:
                          component_data: {}
                          accepted_input_types: []
                          tutorial_mode: false
                          requires_perception_data: false
                          resource_bundle: 134b7e8527df3912090599a28b3e6967.zip
                        version: 2.0.0
                        trials:
                          - id: Trial-03507cc2-c64e-40e8-ab20-a48467ab53c0
                            exam_trial_id: d5ea55f1-d4aa-4aba-8f95-565f6b255da4
                            component: instructions_title_screen
                            component_data:
                              body:
                                image:
                                  filename: 12b57c01b4cf501cd2d0a9f12dc0b545.svg
                                headline:
                                  text: my translated text
                                content:
                                  text: my translated text
                              footer:
                                button:
                                  action: next
                                  style: solid
                                  text: my translated text
                                  value: continue
                              navigation:
                                - CLOSE
                            assets:
                              - id: Asset-54a3ce88-0fbb-470c-83d4-0b267ef9bad1
                                name: nt_cognitiveassessments-imagepairs-bg.svg
                                filename: 12b57c01b4cf501cd2d0a9f12dc0b545.svg
                          - id: Trial-03507cc2-c64e-40e8-ab20-a48467ab53c0
                            exam_trial_id: d5ea55f1-d4aa-4aba-8f95-565f6b255da4
                            component: instructions_text_only
                            component_data:
                              body:
                                headline:
                                  text: my translated text
                                content:
                                  text: my translated text
                              footer:
                                button:
                                  action: next
                                  style: solid
                                  text: my translated text
                                  value: continue
                              navigation:
                                - CLOSE
                                - NEXT
                            assets: []
                          - id: Trial-03507cc2-c64e-40e8-ab20-a48467ab53c0
                            exam_trial_id: d5ea55f1-d4aa-4aba-8f95-565f6b255da4
                            component: instructions_header_image
                            component_data:
                              body:
                                image:
                                  filename: df9a3751d69e5e72dcff065ac57d661c.svg
                              header:
                                headline:
                                  text: my translated text
                                content:
                                  text: my translated text
                              navigation:
                                - CLOSE
                                - PREVIOUS
                                - NEXT
                            assets:
                              - id: Asset-54a3ce88-0fbb-470c-83d4-0b267ef9bad1
                                name: nt_cognitiveassessments-imagepairs-bg.svg
                                filename: 12b57c01b4cf501cd2d0a9f12dc0b545.svg
                      - phase_display_type: PAIRED_IMAGE_GUIDED
                        phase_configuration:
                          component_data: {}
                          accepted_input_types:
                            - VIDEO
                          requires_perception_data: true
                          display_seconds: 5
                          tutorial_mode: false
                          resource_bundle: 134b7e8527df3912090599a28b3e6967.zip
                        version: 2.0.0
                        trials:
                          - id: Trial-03507cc2-c64e-40e8-ab20-a48467ab53c0
                            exam_trial_id: d5ea55f1-d4aa-4aba-8f95-565f6b255da4
                            component: two_images_horizontal
                            component_data:
                              body:
                                trailing_image:
                                  filename: 2117dcf6b595c6fa2e59d0bf31ac8a2c.svg
                                leading_image:
                                  filename: 2117dcf6b595c6fa2e59d0bf31ac8a2c.svg
                            assets:
                              - id: Asset-54a3ce88-0fbb-470c-83d4-0b267ef9bad1
                                name: nt_cognitiveassessments-imagepairs-bg.svg
                                filename: 12b57c01b4cf501cd2d0a9f12dc0b545.svg
                              - id: Asset-54a3ce88-0fbb-470c-83d4-0b267ef9bad1
                                name: nt_cognitiveassessments-imagepairs-bg.svg
                                filename: 12b57c01b4cf501cd2d0a9f12dc0b545.svg
                          - id: Trial-03507cc2-c64e-40e8-ab20-a48467ab53c0
                            exam_trial_id: d5ea55f1-d4aa-4aba-8f95-565f6b255da4
                            component: blank
                            component_data: {}
                            assets: []
                            display_seconds: 2
                            requires_perception_data: false
                      - phase_display_type: INSTRUCTION
                        phase_configuration:
                          component_data: {}
                          accepted_input_types: []
                          tutorial_mode: false
                          requires_perception_data: false
                          resource_bundle: 134b7e8527df3912090599a28b3e6967.zip
                        version: 2.0.0
                        trials:
                          - id: Trial-03507cc2-c64e-40e8-ab20-a48467ab53c0
                            exam_trial_id: d5ea55f1-d4aa-4aba-8f95-565f6b255da4
                            component: instructions_title_screen
                            component_data:
                              body:
                                headline:
                                  text: my translated text
                                content:
                                  text: my translated text
                              footer:
                                button:
                                  action: next
                                  style: solid
                                  text: my translated text
                                  value: continue
                              navigation: []
                            assets: []
                      - phase_display_type: PAIRED_IMAGE_UNGUIDED
                        phase_configuration:
                          component_data: {}
                          accepted_input_types:
                            - VIDEO
                          requires_perception_data: true
                          display_seconds: 5
                          tutorial_mode: false
                          resource_bundle: 134b7e8527df3912090599a28b3e6967.zip
                        version: 2.0.0
                        trials:
                          - id: Trial-03507cc2-c64e-40e8-ab20-a48467ab53c0
                            exam_trial_id: d5ea55f1-d4aa-4aba-8f95-565f6b255da4
                            component: two_images_horizontal
                            component_data:
                              body:
                                trailing_image:
                                  filename: 2117dcf6b595c6fa2e59d0bf31ac8a2c.svg
                                leading_image:
                                  filename: 2117dcf6b595c6fa2e59d0bf31ac8a2c.svg
                            assets:
                              - id: Asset-54a3ce88-0fbb-470c-83d4-0b267ef9bad1
                                name: nt_cognitiveassessments-imagepairs-bg.svg
                                filename: 12b57c01b4cf501cd2d0a9f12dc0b545.svg
                              - id: Asset-54a3ce88-0fbb-470c-83d4-0b267ef9bad1
                                name: nt_cognitiveassessments-imagepairs-bg.svg
                                filename: 12b57c01b4cf501cd2d0a9f12dc0b545.svg
                          - id: Trial-03507cc2-c64e-40e8-ab20-a48467ab53c0
                            exam_trial_id: d5ea55f1-d4aa-4aba-8f95-565f6b255da4
                            component: blank
                            component_data: {}
                            assets: []
                            display_seconds: 2
                            requires_perception_data: false
                      - phase_display_type: INSTRUCTION
                        phase_configuration:
                          component_data: {}
                          accepted_input_types: []
                          tutorial_mode: false
                          requires_perception_data: false
                          resource_bundle: 134b7e8527df3912090599a28b3e6967.zip
                        version: 2.0.0
                        trials:
                          - id: Trial-03507cc2-c64e-40e8-ab20-a48467ab53c0
                            exam_trial_id: d5ea55f1-d4aa-4aba-8f95-565f6b255da4
                            component: instructions_title_screen
                            component_data:
                              body:
                                headline:
                                  text: my translated text
                                content:
                                  text: my translated text
                              footer:
                                button:
                                  action: next
                                  style: solid
                                  text: my translated text
                                  value: continue
                              navigation: []
                            assets: []
                      - phase_display_type: PAIRED_IMAGE_GUIDED
                        phase_configuration:
                          component_data: {}
                          accepted_input_types: []
                          requires_perception_data: false
                          display_seconds: 5
                          tutorial_mode: false
                          resource_bundle: 134b7e8527df3912090599a28b3e6967.zip
                        version: 2.0.0
                        trials:
                          - id: Trial-03507cc2-c64e-40e8-ab20-a48467ab53c0
                            exam_trial_id: d5ea55f1-d4aa-4aba-8f95-565f6b255da4
                            component: two_images_horizontal
                            component_data:
                              body:
                                trailing_image:
                                  filename: 2117dcf6b595c6fa2e59d0bf31ac8a2c.svg
                                leading_image:
                                  filename: 2117dcf6b595c6fa2e59d0bf31ac8a2c.svg
                            assets:
                              - id: Asset-54a3ce88-0fbb-470c-83d4-0b267ef9bad1
                                name: nt_cognitiveassessments-imagepairs-bg.svg
                                filename: 12b57c01b4cf501cd2d0a9f12dc0b545.svg
                              - id: Asset-54a3ce88-0fbb-470c-83d4-0b267ef9bad1
                                name: nt_cognitiveassessments-imagepairs-bg.svg
                                filename: 12b57c01b4cf501cd2d0a9f12dc0b545.svg
                          - id: Trial-03507cc2-c64e-40e8-ab20-a48467ab53c0
                            exam_trial_id: d5ea55f1-d4aa-4aba-8f95-565f6b255da4
                            component: blank
                            component_data: {}
                            assets: []
                            display_seconds: 2
                            requires_perception_data: false
                      - phase_display_type: INSTRUCTION
                        phase_configuration:
                          component_data: {}
                          accepted_input_types: []
                          tutorial_mode: false
                          requires_perception_data: false
                          resource_bundle: 134b7e8527df3912090599a28b3e6967.zip
                        version: 2.0.0
                        trials:
                          - id: Trial-03507cc2-c64e-40e8-ab20-a48467ab53c0
                            exam_trial_id: d5ea55f1-d4aa-4aba-8f95-565f6b255da4
                            component: instructions_title_screen
                            component_data:
                              body:
                                headline:
                                  text: my translated text
                                content:
                                  text: my translated text
                              footer:
                                button:
                                  action: next
                                  style: solid
                                  text: my translated text
                                  value: continue
                              navigation: []
                            assets: []
                      - phase_display_type: PAIRED_IMAGE_UNGUIDED
                        phase_configuration:
                          component_data: {}
                          accepted_input_types:
                            - SELECTION
                          requires_perception_data: true
                          display_seconds: 5
                          tutorial_mode: false
                          resource_bundle: 134b7e8527df3912090599a28b3e6967.zip
                        version: 2.0.0
                        trials:
                          - id: Trial-03507cc2-c64e-40e8-ab20-a48467ab53c0
                            exam_trial_id: d5ea55f1-d4aa-4aba-8f95-565f6b255da4
                            component: two_images_horizontal
                            component_data:
                              body:
                                trailing_image:
                                  filename: 2117dcf6b595c6fa2e59d0bf31ac8a2c.svg
                                leading_image:
                                  filename: 2117dcf6b595c6fa2e59d0bf31ac8a2c.svg
                            assets:
                              - id: Asset-54a3ce88-0fbb-470c-83d4-0b267ef9bad1
                                name: nt_cognitiveassessments-imagepairs-bg.svg
                                filename: 12b57c01b4cf501cd2d0a9f12dc0b545.svg
                              - id: Asset-54a3ce88-0fbb-470c-83d4-0b267ef9bad1
                                name: nt_cognitiveassessments-imagepairs-bg.svg
                                filename: 12b57c01b4cf501cd2d0a9f12dc0b545.svg
                          - id: Trial-03507cc2-c64e-40e8-ab20-a48467ab53c0
                            exam_trial_id: d5ea55f1-d4aa-4aba-8f95-565f6b255da4
                            component: blank
                            component_data: {}
                            assets: []
                            display_seconds: 2
                            requires_perception_data: false
                      - phase_display_type: INSTRUCTION
                        phase_configuration:
                          component_data: {}
                          accepted_input_types: []
                          tutorial_mode: false
                          requires_perception_data: false
                          resource_bundle: 134b7e8527df3912090599a28b3e6967.zip
                        version: 2.0.0
                        trials:
                          - id: Trial-03507cc2-c64e-40e8-ab20-a48467ab53c0
                            exam_trial_id: d5ea55f1-d4aa-4aba-8f95-565f6b255da4
                            component: instructions_title_screen
                            component_data:
                              body:
                                headline:
                                  text: my translated text
                                content:
                                  text: my translated text
                              footer:
                                button:
                                  action: next
                                  style: solid
                                  text: my translated text
                                  value: continue
                              navigation: []
                            assets: []
                Item Price:
                  value:
                    id: Assessment-f071c49a-dd79-47a5-a98d-78c3231e510d
                    user_id: 991e8a2f-9151-4853-bb1c-49b1095a7d00
                    status: NOT_STARTED
                    type: EXAM_PAIRED_ASSOCIATION
                    subtype: PAIRED_ITEM_PRICE_MOBILE
                    base_media_url: 'https://api.jp-neurotrack.io/v1/exam-media'
                    phases:
                      - phase_display_type: INSTRUCTION
                        phase_configuration:
                          component_data: {}
                          accepted_input_types: []
                          tutorial_mode: false
                          requires_perception_data: false
                          resource_bundle: 54197febf0c5d4b2a8623e59ce812493.zip
                        version: 1.0.0
                        trials:
                          - id: Trial-03507cc2-c64e-40e8-ab20-a48467ab53c0
                            exam_trial_id: d5ea55f1-d4aa-4aba-8f95-565f6b255da4
                            component: instructions_title_screen
                            component_data:
                              body:
                                image:
                                  filename: 12b57c01b4cf501cd2d0a9f12dc0b545.svg
                                headline:
                                  text: my translated text
                                content:
                                  text: my translated text
                              footer:
                                button:
                                  action: next
                                  style: solid
                                  text: my translated text
                                  value: continue
                              navigation:
                                - CLOSE
                            assets:
                              - id: Asset-54a3ce88-0fbb-470c-83d4-0b267ef9bad1
                                name: nt_cognitiveassessments-imagepairs-bg.svg
                                filename: 12b57c01b4cf501cd2d0a9f12dc0b545.svg
                          - id: Trial-03507cc2-c64e-40e8-ab20-a48467ab53c0
                            exam_trial_id: d5ea55f1-d4aa-4aba-8f95-565f6b255da4
                            component: instructions_text_only
                            component_data:
                              body:
                                headline:
                                  text: my translated text
                                content:
                                  text: my translated text
                              footer:
                                button:
                                  action: next
                                  style: solid
                                  text: my translated text
                                  value: continue
                              navigation:
                                - CLOSE
                                - NEXT
                            assets: []
                          - id: Trial-03507cc2-c64e-40e8-ab20-a48467ab53c0
                            exam_trial_id: d5ea55f1-d4aa-4aba-8f95-565f6b255da4
                            component: instructions_header_image
                            component_data:
                              body:
                                image:
                                  filename: df9a3751d69e5e72dcff065ac57d661c.svg
                              header:
                                headline:
                                  text: my translated text
                                content:
                                  text: my translated text
                              navigation:
                                - CLOSE
                                - PREVIOUS
                                - NEXT
                            assets:
                              - id: Asset-54a3ce88-0fbb-470c-83d4-0b267ef9bad1
                                name: nt_cognitiveassessments-imagepairs-bg.svg
                                filename: 12b57c01b4cf501cd2d0a9f12dc0b545.svg
                      - phase_display_type: PAIRED_ITEM_PRICE_PHASE_GUIDED
                        phase_configuration:
                          component_data: {}
                          accepted_input_types:
                            - SELECTION
                          tutorial_mode: true
                          requires_perception_data: true
                          display_seconds: 4
                          resource_bundle: 54197febf0c5d4b2a8623e59ce812493.zip
                        version: 1.0.0
                        trials:
                          - id: Trial-03507cc2-c64e-40e8-ab20-a48467ab53c0
                            exam_trial_id: d5ea55f1-d4aa-4aba-8f95-565f6b255da4
                            component: one_image_one_label_horizontal
                            component_data:
                              body:
                                leading_image:
                                  filename: be67b1e6f9a942b3a03219795cac72ef.svg
                                price_label:
                                  price_multiply_factor: '100'
                                  currency_label: ¥
                                  text: ¥250
                            assets:
                              - id: Asset-383f06d9-248f-4fdf-b3ee-e5ba7ab57d79
                                name: broccoli.png
                                filename: be67b1e6f9a942b3a03219795cac72ef.svg
                            trial_scoring_type: target
                      - phase_display_type: INSTRUCTION
                        phase_configuration:
                          component_data: {}
                          accepted_input_types: []
                          tutorial_mode: false
                          requires_perception_data: false
                          resource_bundle: 54197febf0c5d4b2a8623e59ce812493.zip
                        version: 1.0.0
                        trials:
                          - id: Trial-03507cc2-c64e-40e8-ab20-a48467ab53c0
                            exam_trial_id: d5ea55f1-d4aa-4aba-8f95-565f6b255da4
                            component: instructions_title_screen
                            component_data:
                              body:
                                image:
                                  filename: 12b57c01b4cf501cd2d0a9f12dc0b545.svg
                                headline:
                                  text: my translated text
                                content:
                                  text: my translated text
                              footer:
                                button:
                                  action: next
                                  style: solid
                                  text: my translated text
                                  value: continue
                              navigation:
                                - CLOSE
                            assets:
                              - id: Asset-54a3ce88-0fbb-470c-83d4-0b267ef9bad1
                                name: nt_cognitiveassessments-imagepairs-bg.svg
                                filename: 12b57c01b4cf501cd2d0a9f12dc0b545.svg
                          - id: Trial-03507cc2-c64e-40e8-ab20-a48467ab53c0
                            exam_trial_id: d5ea55f1-d4aa-4aba-8f95-565f6b255da4
                            component: instructions_text_only
                            component_data:
                              body:
                                headline:
                                  text: my translated text
                                content:
                                  text: my translated text
                              footer:
                                button:
                                  action: next
                                  style: solid
                                  text: my translated text
                                  value: continue
                              navigation:
                                - CLOSE
                                - NEXT
                            assets: []
                          - id: Trial-03507cc2-c64e-40e8-ab20-a48467ab53c0
                            exam_trial_id: d5ea55f1-d4aa-4aba-8f95-565f6b255da4
                            component: instructions_header_image_two_button
                            component_data:
                              header:
                                headline:
                                  text: my translated text
                                content:
                                  text: my translated text
                              body:
                                image:
                                  filename: df9a3751d69e5e72dcff065ac57d661c.svg
                              footer:
                                leading_button:
                                  action: next
                                  style: solid
                                  text: my translated text
                                  value: left
                                trailing_button:
                                  action: next
                                  style: solid
                                  text: my translated text
                                  value: right
                              navigation:
                                - PREVIOUS
                                - NEXT
                            assets:
                              - id: Asset-54a3ce88-0fbb-470c-83d4-0b267ef9bad1
                                name: nt_cognitiveassessments-imagepairs-bg.svg
                                filename: 12b57c01b4cf501cd2d0a9f12dc0b545.svg
                      - phase_display_type: PAIRED_ITEM_PRICE_PHASE_UNGUIDED
                        phase_configuration:
                          component_data:
                            body:
                              subtitle:
                                text: my translated text
                            footer:
                              leading_button:
                                action: selection
                                style: outline
                                text: my translated text
                                value: 'yes'
                              trailing_button:
                                action: selection
                                style: outline
                                text: my translated text
                                value: 'no'
                          accepted_input_types:
                            - SELECTION
                          tutorial_mode: false
                          requires_perception_data: true
                          display_seconds: 4
                          resource_bundle: 54197febf0c5d4b2a8623e59ce812493.zip
                        version: 1.0.0
                        trials:
                          - id: Trial-03507cc2-c64e-40e8-ab20-a48467ab53c0
                            exam_trial_id: d5ea55f1-d4aa-4aba-8f95-565f6b255da4
                            component: one_image_one_label_two_buttons
                            component_data:
                              body:
                                leading_image:
                                  filename: be67b1e6f9a942b3a03219795cac72ef.svg
                                price_label:
                                  price_multiply_factor: '100'
                                  currency_label: ¥
                                  text: ¥250
                            assets:
                              - id: Asset-383f06d9-248f-4fdf-b3ee-e5ba7ab57d79
                                name: broccoli.png
                                filename: be67b1e6f9a942b3a03219795cac72ef.svg
                            trial_scoring_type: foil_two
                      - phase_display_type: INSTRUCTION
                        phase_configuration:
                          component_data: {}
                          accepted_input_types: []
                          tutorial_mode: false
                          requires_perception_data: false
                          resource_bundle: 54197febf0c5d4b2a8623e59ce812493.zip
                        version: 1.0.0
                        trials:
                          - id: Trial-03507cc2-c64e-40e8-ab20-a48467ab53c0
                            exam_trial_id: d5ea55f1-d4aa-4aba-8f95-565f6b255da4
                            component: instructions_title_screen
                            component_data:
                              body:
                                headline:
                                  text: my translated text
                                content:
                                  text: my translated text
                              footer:
                                button:
                                  action: next
                                  style: solid
                                  text: my translated text
                                  value: continue
                              navigation: []
                            assets: []
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
  '/v1/users/{user_id}/assessments/{assessment_id}/perceptions/{trial_id}/video':
    post:
      tags:
        - exam serving
      summary: Create exam
      description: 'This endpoint let us upload the trial related videos. We must invoke this endpoint before we send the JSON perception, since the output of the video endpoint is part of the JSON.'
      parameters:
        - $ref: '#/components/parameters/user_id'
        - $ref: '#/components/parameters/assessment_id'
        - name: trial_id
          required: true
          in: path
          schema:
            type: string
          description: UUID used to uniquely identify the Trial.
      requestBody:
        content:
          video/mp4:
            schema:
              type: string
              format: binary
          video/webm:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: The response contains the file uploaded to the server.
          content:
            application/json:
              schema:
                type: object
                required:
                  - file
                properties:
                  file:
                    type: string
                    description: 'S3 Key to the file in the server. If the video is linked to a particular Trial, the trial_id will be part of the S3 Key.'
                    example: users/my_user_id/my_assessment_id/my_trial_id/linux_epoc.random_uuid.mp4
              examples:
                TrialVideo:
                  value: users/my_fake_user_id/my_fake_assessment_id/my_fake_trial_id/linux_epoc.random_uuid.mp4
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
  '/v1/users/{user_id}/assessments/{assessment_id}/perceptions':
    post:
      tags:
        - exam serving
      summary: Submit the perception data
      description: 'We''re using the same endpoint for all exams, so the payload can change according to the exam.'
      parameters:
        - $ref: '#/components/parameters/user_id'
        - $ref: '#/components/parameters/assessment_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  required:
                    - assessment_id
                    - perceptions
                  properties:
                    assessment_id:
                      type: string
                      description: UUID for the Assessment being taken.
                      example: Assessment-7ad63204-c367-4dcf-9245-e87e08f67b99
                    perceptions:
                      type: array
                      description: List of perceptions for all available trials in the assessment. We make just a single Post Perception call including all trials.
                      items:
                        required:
                          - exam_trial_id
                          - trial_start_time
                          - trial_end_time
                          - timeout
                        allOf:
                          - type: object
                            properties:
                              exam_trial_id:
                                type: string
                                description: This attribute is part of the Trial received in the Get Assessment endpoint.
                                example: 4b0283a9-fe10-4487-bf14-28e8a67a8312
                              trial_start_time:
                                type: string
                                description: 'When the trial started, in a ISO string. Milliseconds precision is required for most exams.'
                                example: '2021-01-20T09:00:00.000Z'
                              trial_end_time:
                                type: string
                                description: 'When the trial ended, in a ISO string. Milliseconds precision is required for most exams.'
                                example: '2021-01-20T09:00:00.000Z'
                              metadata:
                                type: object
                              data:
                                type: object
                              timeout:
                                type: boolean
                                description: 'Indicates if the time was expired and the user did not provide any answer. When it is true, we should not expect any content in the data attribute. This attribute could be an empty array of even removed from the payload.'
                          - type: object
                            properties:
                              data:
                                type: array
                                description: 'For Image Pairs, each trial should have at most one item in this array.'
                                items:
                                  type: object
                                  required:
                                    - type
                                    - value
                                  properties:
                                    type:
                                      type: string
                                      description: 'Perception type. In this case, it will be SELECTION.'
                                      example: SELECTION
                                    value:
                                      type: string
                                      description: Value of the button clicked.
                                      enum:
                                        - 'yes'
                                        - 'no'
                - type: object
                  description: 'Before we invoke this endpoint, we need to upload the videos using the video upload endpoint. It will return the file name that should be used as the input data here.'
                  required:
                    - assessment_id
                    - perceptions
                  properties:
                    assessment_id:
                      type: string
                      description: UUID for the Assessment being taken.
                      example: Assessment-7ad63204-c367-4dcf-9245-e87e08f67b99
                    perceptions:
                      type: array
                      description: List of perceptions for all available trials in the assessment. We make just a single Post Perception call including all trials.
                      items:
                        required:
                          - exam_trial_id
                          - trial_start_time
                          - trial_end_time
                          - timeout
                        allOf:
                          - $ref: '#/paths/~1v1~1users~1%7Buser_id%7D~1assessments~1%7Bassessment_id%7D~1perceptions/post/requestBody/content/application~1json/schema/oneOf/0/properties/perceptions/items/allOf/0'
                          - type: object
                            properties:
                              data:
                                type: array
                                description: 'For Image Pairs, each trial should have at most one item in this array.'
                                items:
                                  type: object
                                  required:
                                    - type
                                    - value
                                  properties:
                                    type:
                                      type: string
                                      description: 'Perception type. In this case, it will be VIDEO.'
                                      example: VIDEO
                                    value:
                                      type: object
                                      required:
                                        - file
                                        - order
                                      properties:
                                        file:
                                          type: string
                                          description: File name returned by the upload video endpoint. Different video codec types are supported.
                                          example: c05620d7-6846-4743-bbd8-5a04e99898c6.mp4
                                        order:
                                          type: integer
                                          description: 'When we need to send multiple video chunks, this attribute indicates the order of each chunk. First item should always be 0.'
                                          example: 0
            examples:
              Image Pairs:
                value:
                  - exam_trial_id: 2e37eca7-8c68-4e56-a2c5-1aff6f5f4a79
                    trial_start_time: '2021-06-15T00:00:00.000Z'
                    trial_end_time: '2021-06-15T00:00:02.000Z'
                    timeout: false
                    data:
                      - type: selection
                        value: 'yes'
                  - exam_trial_id: 2e37eca7-8c68-4e56-a2c5-1aff6f5f4a79
                    trial_start_time: '2021-06-15T00:00:00.000Z'
                    trial_end_time: '2021-06-15T00:00:04.000Z'
                    timeout: true
                    data: []
                  - exam_trial_id: 2e37eca7-8c68-4e56-a2c5-1aff6f5f4a79
                    trial_start_time: '2021-06-15T00:00:00.000Z'
                    trial_end_time: '2021-06-15T00:00:02.000Z'
                    timeout: false
                    data:
                      - type: video
                        value:
                          file: my_file_name_received_from_send_video_endpoint
                          order: 0
              Item Price:
                value:
                  - exam_trial_id: 2e37eca7-8c68-4e56-a2c5-1aff6f5f4a79
                    trial_start_time: '2021-06-15T00:00:00.000Z'
                    trial_end_time: '2021-06-15T00:00:02.000Z'
                    metadata:
                      trial_scoring_type: foil
                    data:
                      - type: selection
                        value: 'yes'
      responses:
        '200':
          description: The response is a list of dictionaries containing the exam_trial_id and the perception_id that was created for that trial.
          content:
            application/json:
              schema:
                anyOf:
                  - type: array
                    description: Empty array
                    items:
                      type: string
                  - type: object
                    properties:
                      exam_trial_id:
                        type: string
                        description: UUID of the Exam Trial sent in the payload
                        example: 793b37bd-61b7-4a36-8540-47fe096b7443
                      perception_id:
                        type: string
                        description: UUID for the created perception record
                        example: 49e2b804-7f64-46e3-a718-6f594c9ec1d8
                    required:
                      - exam_trial_id
                      - perception_id
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
  '/v1/users/{user_id}/assessments/{assessment_id}/perceptions/eyes-on-patient/{timestamp}':
    post:
      tags:
        - exam serving
      summary: Uploads the eyes on patient videos.
      description: This endpoint let us upload the eyes on patient videos. There is no validation in terms of assessment status to allow us send these videos at any time.
      parameters:
        - $ref: '#/components/parameters/user_id'
        - $ref: '#/components/parameters/assessment_id'
        - name: timestamp
          required: true
          in: path
          schema:
            type: string
          description: timestamp of the video. Used to let us merge the videos on the backend in the proper order.
          example: '1612298611862'
      requestBody:
        content:
          video/mp4:
            schema:
              type: string
              format: binary
          video/webm:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: The response contains the file uploaded to the server.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v1~1users~1%7Buser_id%7D~1assessments~1%7Bassessment_id%7D~1perceptions~1%7Btrial_id%7D~1video/post/responses/200/content/application~1json/schema'
              examples:
                TrialVideo:
                  value: users/my_fake_user_id/my_fake_assessment_id/linux_epoc.random_uuid.mp4
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
  '/v1/users/{user_id}/results':
    get:
      tags:
        - results
      summary: List user results v1
      description: 'Get User results, allowing a combination of parameters to retrieve data.'
      parameters:
        - $ref: '#/components/parameters/user_id'
        - in: header
          name: Accept-Language
          description: Language used to translate content.
          schema:
            type: string
            enum:
              - en
              - ja
            default: en
        - in: query
          name: translate
          description: 'Translate the content if true. Otherwise, returns the translation keys.'
          schema:
            type: boolean
            enum:
              - true
              - false
            default: true
        - in: query
          name: latest
          description: 'retrieves latest results for the user. Can not be used with assessment_id, domain or status.'
          schema:
            type: boolean
            enum:
              - true
              - false
        - in: query
          name: category
          description: retrieves results on a category domain for the user. Can not be used with assessment_id.
          schema:
            type: string
            enum:
              - cognitive
              - lifestyle
            default: cognitive
        - in: query
          name: domain
          description: 'retrieves results on a given domain for the user. Can not be used with assessment_id, latest or status.'
          schema:
            type: string
            enum:
              - associative_learning
              - associative_memory
              - attention
              - cognitive_training
              - executive_function
              - exercise
              - inhibition
              - nutrition
              - processing_speed
              - sleep
              - social_engagement
              - stress
        - in: query
          name: assessment_id
          description: 'Assessment ID that will have its results retrieved. Can not be used with latest, category, domain or status.'
          schema:
            type: string
        - in: query
          name: status
          description: 'Status of results that will be included in the response. Allows multiple items separated by comma. Accepted values: RESULT_AVAILABLE, RESULT_FAILED, RESULT_FLAGGED.'
          schema:
            type: string
            default: RESULT_AVAILABLE
        - in: query
          name: assessment_start_at
          description: 'Includes in the response only the Results for assessments started exactly at the given ISO formatted date. If the request doesn''t include any of the assessment_start_at filters, only results from the last 12 months will be included in the response.'
          schema:
            type: string
        - in: query
          name: assessment_start_at__gt
          description: 'Includes in the response only the Results for assessments started after the given ISO formatted date. If the request doesn''t include any of the assessment_start_at filters, only results from the last 12 months will be included in the response.'
          schema:
            type: string
        - in: query
          name: assessment_start_at__gte
          description: 'Includes in the response only the Results for assessments started after (or exactly at) the given ISO formatted date. If the request doesn''t include any of the assessment_start_at filters, only results from the last 12 months will be included in the response.'
          schema:
            type: string
        - in: query
          name: assessment_start_at__lt
          description: 'Includes in the response only the Results for assessments started before the given ISO formatted date. If the request doesn''t include any of the assessment_start_at filters, only results from the last 12 months will be included in the response.'
          schema:
            type: string
        - in: query
          name: assessment_start_at__lte
          description: 'Includes in the response only the Results for assessments started before (or exactly at) the given ISO formatted date. If the request doesn''t include any of the assessment_start_at filters, only results from the last 12 months will be included in the response.'
          schema:
            type: string
      responses:
        '200':
          description: The payload is different when we request latest data or any other option
          content:
            application/json:
              schema:
                anyOf:
                  - type: object
                    required:
                      - user_id
                      - category
                      - category_display_text
                      - domain
                      - domain_display_text
                    properties:
                      user_id:
                        type: string
                        example: 7551576a-492f-47d0-8af2-1ce4e6f9a418
                      category:
                        type: string
                        enum:
                          - COGNITIVE
                          - LIFESTYLE
                        example: COGNITIVE
                      category_display_text:
                        type: string
                        example: Cognitive
                        description: Translable content for category field
                      domain:
                        type: string
                        enum:
                          - ASSOCIATIVE_LEARNING
                          - ASSOCIATIVE_MEMORY
                          - ATTENTION
                          - COGNTIVE_TRAINING
                          - EXECUTIVE_FUNCTION
                          - EXERCISE
                          - INHIBITION
                          - NUTRITION
                          - PROCESSING_SPEED
                          - SLEEP
                          - SOCIAL_ENGAGEMENT
                          - STRESS
                          - IMPRINT_MEMORY
                          - GLOBAL_COGNITIVE_SCORE
                          - GLOBAL_LIFESTYLE_SCORE
                      domain_display_text:
                        type: string
                        example: Associative Memory
                        description: Translatable content for domain field
                      assessment_name:
                        type: string
                        example: 'Assessment: Image Pairs'
                        description: Not included for Global Score or lifestyle domains
                      quantile_descriptor_bounds:
                        type: object
                        properties:
                          LOW:
                            type: array
                            items:
                              type: number
                            minItems: 2
                            maxItems: 2
                            description: lower and upper bound for quantile descriptor
                            example:
                              - 0.01
                              - 0.09
                          BELLOW_AVERAGE:
                            type: array
                            items:
                              type: number
                            minItems: 2
                            maxItems: 2
                            description: lower and upper bound for quantile descriptor
                            example:
                              - 0.09
                              - 0.25
                          AVERAGE_ABOVE:
                            type: array
                            items:
                              type: number
                            minItems: 2
                            maxItems: 2
                            description: lower and upper bound for quantile descriptor
                            example:
                              - 0.25
                              - 1.000001
                      status_reason:
                        type: array
                        description: Translatable list of reasons for assessment failure
                        items:
                          type: string
                        example:
                          - Responded 'Yes' too often
                          - Responded incorrectly too often on easier trials
                      results:
                        type: array
                        description: List of results for the given domain
                        items:
                          type: object
                          properties:
                            quantile:
                              type: number
                              example: 0.52
                            quantile_display_text:
                              type: string
                              example: Expected
                              description: Translatable bucket name for the given quantile
                            quantile_descriptor:
                              type: string
                              example: AVERAGE_ABOVE
                              enum:
                                - LOW
                                - BELOW_AVERAGE
                                - AVERAGE_ABOVE
                                - POOR
                                - MODERATE
                                - HIGH
                              description: 'Quantile descriptor for Cognitive Domains are: LOW, BELOW_AVERAGE or AVERAGE_ABOVE. Lifestyle Domains use POOR, MODERATE, HIGH'
                            raw_score:
                              type: number
                              example: 0.6123
                              description: User's raw score on the exam
                  - type: object
                    properties:
                      ASSOCIATIVE_LEARNING:
                        $ref: '#/paths/~1v1~1users~1%7Buser_id%7D~1results/get/responses/200/content/application~1json/schema/anyOf/0'
                      ASSOCIATIVE_MEMORY:
                        $ref: '#/paths/~1v1~1users~1%7Buser_id%7D~1results/get/responses/200/content/application~1json/schema/anyOf/0'
                      ATTENTION:
                        $ref: '#/paths/~1v1~1users~1%7Buser_id%7D~1results/get/responses/200/content/application~1json/schema/anyOf/0'
                      EXECUTIVE_FUNCTION:
                        $ref: '#/paths/~1v1~1users~1%7Buser_id%7D~1results/get/responses/200/content/application~1json/schema/anyOf/0'
                      INHIBITION:
                        $ref: '#/paths/~1v1~1users~1%7Buser_id%7D~1results/get/responses/200/content/application~1json/schema/anyOf/0'
                      PROCESSING_SPEED:
                        $ref: '#/paths/~1v1~1users~1%7Buser_id%7D~1results/get/responses/200/content/application~1json/schema/anyOf/0'
                      GLOBAL_COGNITIVE_SCORE:
                        $ref: '#/paths/~1v1~1users~1%7Buser_id%7D~1results/get/responses/200/content/application~1json/schema/anyOf/0'
                  - type: object
                    properties:
                      COGNITIVE_TRAINING:
                        $ref: '#/paths/~1v1~1users~1%7Buser_id%7D~1results/get/responses/200/content/application~1json/schema/anyOf/0'
                      EXERCISE:
                        $ref: '#/paths/~1v1~1users~1%7Buser_id%7D~1results/get/responses/200/content/application~1json/schema/anyOf/0'
                      NUTRITION:
                        $ref: '#/paths/~1v1~1users~1%7Buser_id%7D~1results/get/responses/200/content/application~1json/schema/anyOf/0'
                      SLEEP:
                        $ref: '#/paths/~1v1~1users~1%7Buser_id%7D~1results/get/responses/200/content/application~1json/schema/anyOf/0'
                      SOCIAL_ENGAGEMENT:
                        $ref: '#/paths/~1v1~1users~1%7Buser_id%7D~1results/get/responses/200/content/application~1json/schema/anyOf/0'
                      STRESS:
                        $ref: '#/paths/~1v1~1users~1%7Buser_id%7D~1results/get/responses/200/content/application~1json/schema/anyOf/0'
                      GLOBAL_LIFESTYLE_DOMAIN:
                        $ref: '#/paths/~1v1~1users~1%7Buser_id%7D~1results/get/responses/200/content/application~1json/schema/anyOf/0'
        '400':
          description: Invalid Query string
          content:
            application/json:
              examples:
                'Missing assessment_id, domain or latest':
                  value:
                    code: RS-101
                    message: Invalid value for query string parameters
                    culprits:
                      - category: filter parameters
                        message: domain or latest or assessment_id is required
                        field: query_parameters
                'Passed more than one of assessment_id, domain, latest':
                  value:
                    code: RS-101
                    message: Invalid value for query string parameters
                    culprits:
                      - category: filter parameters
                        message: <field1> and <field2> are mutually exclusive
                        field: query_parameters
                Invalid Category:
                  value:
                    code: RS-101
                    message: Invalid value for query string parameters
                    culprits:
                      - category: filter parameters
                        message: Invalid category
                        field: query_parameters
                Invalid Domain:
                  value:
                    code: RS-101
                    message: Invalid value for query string parameters
                    culprits:
                      - category: filter parameters
                        message: Invalid domain
                        field: query_parameters
                Latest param is not true (case-insensitive):
                  value:
                    code: RS-101
                    message: Invalid value for query string parameters
                    culprits:
                      - category: filter parameters
                        message: Invalid value for latest
                        field: query_parameters
                Invalid status:
                  value:
                    code: RS-101
                    message: Invalid value for query string parameters
                    culprits:
                      - category: filter parameters
                        message: Invalid status
                        field: query_parameters
                assessment_started_at used with latest or assessment_id:
                  value:
                    code: RS-101
                    message: Invalid value for query string parameters
                    culprits:
                      - category: filter parameters
                        message: assessment_started_at can only be combined with domain
                        field: query_parameters
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
  '/v2/results/users/{user_id}':
    get:
      tags:
        - results
      summary: List user results v2
      description: 'List User results, allowing a combination of parameters to retrieve data. The last ''n'' results are retrieved chronologically, where ''n'' is an integer parameter. The endpoint has a framework that supports any additional parameter that is passed. The parameter should be passed in the format "filter[field_name]=filter_value".'
      parameters:
        - $ref: '#/components/parameters/user_id'
        - in: header
          name: Accept-Language
          description: Language used to translate content.
          schema:
            type: string
            enum:
              - en
              - ja
            default: en
        - in: query
          name: translate
          description: 'Translate the content if true. Otherwise, returns the translation keys.'
          schema:
            type: boolean
            enum:
              - true
              - false
            default: true
        - in: query
          name: before
          description: 'Provides an option for the user to enter the start date of results needed, in an ISO formatted fashion. Includes in the response only the Results for assessments started exactly at the given ISO formatted date.'
          schema:
            type: string
        - in: query
          name: after
          description: 'Provides an option for the user to enter the end date till which results are needed, in an ISO formatted fashion. Includes in the response only the Results for assessments that end exactly at the given ISO formatted date.'
          schema:
            type: string
        - in: query
          name: status
          description: 'Retrieves failed or successful results, according  to the value of the parameter selected. Failed results include results in both the RESULT_FAILED as well as the RESULT_FLAGGED statuses.'
          schema:
            type: string
            enum:
              - RESULT_AVAILABLE
              - RESULT_FAILED
              - RESULT_FLAGGED
        - in: query
          name: Domain
          description: 'retrieves results on a given domain for the user. Can not be used with assessment_id, latest or status.'
          schema:
            type: string
            enum:
              - associative_learning
              - associative_memory
              - attention
              - cognitive_training
              - executive_function
              - exercise
              - inhibition
              - nutrition
              - processing_speed
              - sleep
              - social_engagement
              - stress
        - in: query
          name: count
          description: 'The number of records to be retrieved chronologically, with the latest records displayed first.'
          schema:
            type: number
            default: 10
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - type: object
                      required:
                        - user_id
                        - assessment_id
                        - category
                        - status
                        - perception_started_at
                        - domain
                        - quantile
                        - quantile_descriptor
                        - raw_score
                        - quantile_descriptor_bounds
                      properties:
                        user_id:
                          type: string
                          example: 7551576a-492f-47d0-8af2-1ce4e6f9a418
                        assessment_id:
                          type: string
                          example: Assessment-8d3a5624-7fcb-4100-a9ca-0c285efca68f
                        assessment_name:
                          type: string
                          example: 'Assessment: Image Pairs'
                          description: Only Cognitive Exams would have this attribute filled.
                        category:
                          type: string
                          enum:
                            - COGNITIVE
                            - LIFESTYLE
                          example: COGNITIVE
                        status:
                          $ref: '#/paths/~1v2~1users~1%7Buser_id%7D~1assessments~1%7Bassessment_id%7D/get/responses/200/content/application~1json/schema/properties/status'
                        status_reason:
                          type: array
                          items:
                            type: string
                            example: IMPLICIT_LEARNING-USER_RESULT_SUCCEED
                        perception_started_at:
                          type: string
                          example: '2021-07-29T18:37:24.600Z'
                        domain:
                          type: string
                          enum:
                            - ASSOCIATIVE_LEARNING
                            - ASSOCIATIVE_MEMORY
                            - ATTENTION
                            - COGNTIVE_TRAINING
                            - EXECUTIVE_FUNCTION
                            - EXERCISE
                            - INHIBITION
                            - NUTRITION
                            - PROCESSING_SPEED
                            - SLEEP
                            - SOCIAL_ENGAGEMENT
                            - STRESS
                            - IMPRINT_MEMORY
                            - GLOBAL_COGNITIVE_SCORE
                            - GLOBAL_LIFESTYLE_SCORE
                        quantile:
                          type: number
                          example: 0.52
                        quantile_descriptor:
                          type: string
                          example: AVERAGE_ABOVE
                          enum:
                            - LOW
                            - BELOW_AVERAGE
                            - AVERAGE_ABOVE
                            - POOR
                            - MODERATE
                            - HIGH
                          description: 'Quantile descriptor for Cognitive Domains are: LOW, BELOW_AVERAGE or AVERAGE_ABOVE. Lifestyle Domains use POOR, MODERATE, HIGH'
                        raw_score:
                          type: number
                          example: 0.6123
                          description: User's raw score on the exam
                        quantile_descriptor_bounds:
                          type: object
                          properties:
                            LOW:
                              type: array
                              items:
                                type: number
                              minItems: 2
                              maxItems: 2
                              description: lower and upper bound for quantile descriptor
                              example:
                                - 0.01
                                - 0.09
                            BELLOW_AVERAGE:
                              type: array
                              items:
                                type: number
                              minItems: 2
                              maxItems: 2
                              description: lower and upper bound for quantile descriptor
                              example:
                                - 0.09
                                - 0.25
                            AVERAGE_ABOVE:
                              type: array
                              items:
                                type: number
                              minItems: 2
                              maxItems: 2
                              description: lower and upper bound for quantile descriptor
                              example:
                                - 0.25
                                - 1.000001
                    - type: object
                      required:
                        - user_id
                        - assessment_id
                        - category
                        - status
                        - status_reason
                        - perception_started_at
                        - domain
                      properties:
                        user_id:
                          type: string
                          example: 7551576a-492f-47d0-8af2-1ce4e6f9a418
                        assessment_id:
                          type: string
                          example: Assessment-8d3a5624-7fcb-4100-a9ca-0c285efca68f
                        assessment_name:
                          type: string
                          example: 'Assessment: Image Pairs'
                          description: Only Cognitive Exams would have this attribute filled.
                        category:
                          $ref: '#/paths/~1v2~1results~1users~1%7Buser_id%7D/get/responses/200/content/application~1json/schema/items/anyOf/0/properties/category'
                        status:
                          $ref: '#/paths/~1v2~1users~1%7Buser_id%7D~1assessments~1%7Bassessment_id%7D/get/responses/200/content/application~1json/schema/properties/status'
                        status_reason:
                          type: array
                          items:
                            type: string
                            example: assessment_status_reason_incomplete_generic
                        perception_started_at:
                          type: string
                          example: '2021-07-29T18:37:24.600Z'
                        domain:
                          $ref: '#/paths/~1v2~1results~1users~1%7Buser_id%7D/get/responses/200/content/application~1json/schema/items/anyOf/0/properties/domain'
                    - type: object
                      required:
                        - user_id
                        - category
                        - status
                        - perception_started_at
                        - domain
                        - quantile
                        - quantile_descriptor
                        - raw_score
                        - quantile_descriptor_bounds
                      properties:
                        user_id:
                          type: string
                          example: 7551576a-492f-47d0-8af2-1ce4e6f9a418
                        category:
                          $ref: '#/paths/~1v2~1results~1users~1%7Buser_id%7D/get/responses/200/content/application~1json/schema/items/anyOf/0/properties/category'
                        status:
                          $ref: '#/paths/~1v2~1users~1%7Buser_id%7D~1assessments~1%7Bassessment_id%7D/get/responses/200/content/application~1json/schema/properties/status'
                        perception_started_at:
                          type: string
                          example: '2021-07-29T18:37:24.600Z'
                        domain:
                          const: GLOBAL_COGNITIVE_SCORE
                        quantile:
                          type: number
                          example: 0.52
                        quantile_descriptor:
                          type: string
                          example: AVERAGE_ABOVE
                          enum:
                            - LOW
                            - BELOW_AVERAGE
                            - AVERAGE_ABOVE
                            - POOR
                            - MODERATE
                            - HIGH
                          description: 'Quantile descriptor for Cognitive Domains are: LOW, BELOW_AVERAGE or AVERAGE_ABOVE. Lifestyle Domains use POOR, MODERATE, HIGH'
                        raw_score:
                          type: number
                          example: 0.6123
                          description: User's raw score on the exam
                        quantile_descriptor_bounds:
                          type: object
                          properties:
                            LOW:
                              type: array
                              items:
                                type: number
                              minItems: 2
                              maxItems: 2
                              description: lower and upper bound for quantile descriptor
                              example:
                                - 0.01
                                - 0.09
                            BELLOW_AVERAGE:
                              type: array
                              items:
                                type: number
                              minItems: 2
                              maxItems: 2
                              description: lower and upper bound for quantile descriptor
                              example:
                                - 0.09
                                - 0.25
                            AVERAGE_ABOVE:
                              type: array
                              items:
                                type: number
                              minItems: 2
                              maxItems: 2
                              description: lower and upper bound for quantile descriptor
                              example:
                                - 0.25
                                - 1.000001
                    - type: object
                      required:
                        - user_id
                        - category
                        - status
                        - perception_started_at
                        - domain
                        - quantile
                        - quantile_descriptor
                        - raw_score
                        - quantile_descriptor_bounds
                      properties:
                        user_id:
                          type: string
                          example: 7551576a-492f-47d0-8af2-1ce4e6f9a418
                        category:
                          $ref: '#/paths/~1v2~1results~1users~1%7Buser_id%7D/get/responses/200/content/application~1json/schema/items/anyOf/0/properties/category'
                        status:
                          $ref: '#/paths/~1v2~1users~1%7Buser_id%7D~1assessments~1%7Bassessment_id%7D/get/responses/200/content/application~1json/schema/properties/status'
                        perception_started_at:
                          type: string
                          example: '2021-07-29T18:37:24.600Z'
                        domain:
                          const: GLOBAL_LIFESTYLE_SCORE
                        quantile:
                          type: number
                          nullable: true
                          example: 0.52
                        quantile_descriptor:
                          type: string
                          example: AVERAGE_ABOVE
                          enum:
                            - LOW
                            - BELOW_AVERAGE
                            - AVERAGE_ABOVE
                            - POOR
                            - MODERATE
                            - HIGH
                          description: 'Quantile descriptor for Cognitive Domains are: LOW, BELOW_AVERAGE or AVERAGE_ABOVE. Lifestyle Domains use POOR, MODERATE, HIGH'
                        raw_score:
                          type: number
                          example: 0.6123
                          description: User's raw score on the exam
                        quantile_descriptor_bounds:
                          type: object
                          properties:
                            LOW:
                              type: array
                              items:
                                type: number
                              minItems: 2
                              maxItems: 2
                              description: lower and upper bound for quantile descriptor
                              example:
                                - 0.01
                                - 0.09
                            BELLOW_AVERAGE:
                              type: array
                              items:
                                type: number
                              minItems: 2
                              maxItems: 2
                              description: lower and upper bound for quantile descriptor
                              example:
                                - 0.09
                                - 0.25
                            AVERAGE_ABOVE:
                              type: array
                              items:
                                type: number
                              minItems: 2
                              maxItems: 2
                              description: lower and upper bound for quantile descriptor
                              example:
                                - 0.25
                                - 1.000001
        '400':
          description: Invalid Query string
          content:
            application/json:
              examples:
                Invalid Domain:
                  value:
                    code: RS-101
                    message: Invalid value for query string parameters
                    culprits:
                      - category: INVALID_REQUEST_DATA
                        message: Invalid domain
                        field: domain
                Invalid status:
                  value:
                    code: RS-101
                    message: Invalid value for query string parameters
                    culprits:
                      - category: INVALID_REQUEST_DATA
                        message: 'Invalid status provided: [''invalid_status'']'
                        field: status
                Invalid count:
                  value:
                    code: RS-101
                    message: Invalid value for query string parameters
                    culprits:
                      - category: INVALID_REQUEST_DATA
                        message: Invalid count value
                        field: count
                QueryDBError:
                  value:
                    code: RS-106
                    message: An unexpected error occurred while querying DynamoDB.
                    culprits:
                      - category: DB_ERROR
                        message: 'Unable to get results from DynamoDB : error_code: error_message'
                        field: ''
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  headers:
    X-RateLimit-Limit:
      description: Request limit per hour
      schema:
        type: integer
      example: 100
    X-RateLimit-Remaining:
      description: Remaining requests for the hour
      schema:
        type: integer
      example: 94
  parameters:
    assessment_id:
      name: assessment_id
      required: true
      in: path
      schema:
        type: string
      description: UUID used to uniquely identify the assessment.
    user_id:
      name: user_id
      required: true
      in: path
      schema:
        type: string
      description: UUID used to uniquely identify the user.
    exam_id:
      name: exam_id
      required: true
      in: path
      schema:
        type: string
      description: Exam code used to uniquely identify the exam.
    set_name:
      name: set_name
      required: true
      in: path
      schema:
        type: string
      description: Name used to uniquely identify the exam set for a specific exam.
  requestBodies:
    EmptyPayload:
      description: A JSON object containing item data
      content: null
      application/json:
        schema: null
        type: object
  schemas:
    NtApiError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: MOD-999
        message:
          type: string
          example: Object not found
        culprits:
          type: array
          items:
            type: object
            required:
              - category
              - message
            properties:
              category:
                type: string
                description: Category of the error culprit.
                example: INVALID_PARAMETERS
              message:
                type: string
                description: 'Human readable error message, but currently not translated to different languages.'
                example: Unable to retrieve object
              field:
                type: string
                description: field in the input payload that caused the error.
                example: object_id
              original:
                type: object
                description: The original value provided with the request.
                additionalProperties: true
              expected:
                type: object
                description: Either a list of valid values or a language agnostic representation of the value needed.
                additionalProperties: true
        extra:
          type: object
          description: Extra field to display context information to client.
          additionalProperties: true
        fingerprint:
          type: string
          description: A unique ID for this specific failure. Usually the AWS request-Id to help us debug the issue on the server-side.
          example: 1c724b87-dcf4-4a1e-99e5-f8d21da50d0e
    AppStatus:
      type: object
      properties:
        status:
          type: string
          description: Current status of the API.
          enum:
            - UP_TO_DATE
            - UPDATE_AVAILABLE
            - UPDATE_REQUIRED
            - MAINTENANCE_MODE
        headline:
          type: string
          description: Headline to be displayed on the app about the current status. This message will be translated according to the language defined on the request header.
          example: Update Required
        body:
          type: string
          description: Message to be displayed on the app about the current status. This message will be translated according to the language defined on the request header.
          example: An updated version of Neurotrack is available. You must download it to continue your experience.
  responses:
    '400':
      description: Bad request. return HTTP 400
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NtApiError'
    '401':
      description: 'Unauthorized. return HTTP 401. In most case, it is required to refresh the token and pass a new access token in the new request.'
      content:
        application/json:
          schema:
            type: object
            required:
              - message
            properties:
              fingerprint:
                type: string
                description: AWS request ID to make it easier to find the logs on the server side.
                example: caa74ba5-ba7e-4c46-9df5-e3d064682081
              code:
                type: string
                description: Error code.
                example: AUTH-006
              message:
                type: string
                description: Error message.
                example: Unauthorized
    '403':
      description: Forbidden. return HTTP 403. It may happen when the user credential is not valid. This credential can be either username/password or an access token
      content:
        application/json:
          schema:
            type: object
            required:
              - message
            properties:
              fingerprint:
                type: string
                description: AWS request ID to make it easier to find the logs on the server side.
                example: caa74ba5-ba7e-4c46-9df5-e3d064682081
              code:
                type: string
                description: Error code.
                example: AUTH-001
              message:
                type: string
                description: Error message.
                example: Wrong email or password
    '404':
      description: Not Found. return HTTP 404
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NtApiError'
    NullResponse:
      description: Null response
